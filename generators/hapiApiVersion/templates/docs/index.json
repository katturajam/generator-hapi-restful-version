{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0",
    "title": "Mobile Access SDK API Documentation",
    "description": "# Introduction \n This document will provide the specification for Mobile Access API that will help the integrators to use them  to access the  functionalities and to receive notifications from HID on the status changes for mobile access entities like users, invitations, devices and credentials. This developer's guide is intended for software developers who need technical reference for using the HID Mobile Access REST API & Callback API to consume the functionalities in HID Mobile Access. \n\n# Glossary of Terms\n\n| **Term**  | **Description**|\n| ------------ | ------------ |\n| REST  | Representational State TransferArchitectural style used to perform CRUD operations over the web using HTTP methods such as GET, POST, PUT, DELETE  |\n| JSON  | JavaScript Object NotationOpen standard format that uses human-readable text to transmit data objects consisting of attribute-value pairs. Used primarily to transmit data between a server and web application, as an alternative to XML|\n| TSM  | Trusted Service Manager. Acts as a neutral broker that sets up business agreements and technical connections with mobile network operators, phone manufactures and service providers  |\n|  SCIM | System for Cross-Domain Identity Management. Set of predefined schema to represent PACS users and groups in Identity provisioning  \n\n # Endpoints \n ## Base Uri\n All URLs referenced in the API documentation begin with the following base URL \n ```\n  https://ma.api.assaabloy.com/credential-management\n```\n ## CustomerID\n This is the uniqueID and shall be communicated to APIs consumer to utilize in the API integration and it is mandatory in the request.\n ```\n  {Base URI}/customer/{customer_id}/\n```\n\nTable below provides details on list of API Endpoints exposed:\n\n| **Endpoint**  | **Description**  |\n| ------------ | ------------ |\n| Users  | Create, Get, List, Update, Delete, Search  |\n| Invitations  | Create, Get, List, Cancel, Search, Send Email  |\n| Part Number  | Get, List, Search  |\n|  Credentials | Issue, Get, Revoke, Search   |\n|  Credential Container |  Get, List, Delete |\n| Callback  | Register, Get, Update, Unregister  |\n| Meta Endpoints  | Get \n\n # Authentication \n ## Password Based Authentication \n All entity endpoints required authentication via Bearer Token (Access Token) on HTTP Header. Every request to the REST API must be authenticated via this Token over on HTTP Header. If you want to make a REST request to these API, we assume,\n 1.  You have been granted access to Portal SDK \n 2.  You have created System Account User (client ID) for Mobile Access using Static Password as Credential in SIS Portal \n3.  You will be going to generate the Bearer Token using Static Password \n \n Sample Request payload for Getting Bearer Token via OpenID \n ```\n  POST /{tenant}/authn/token HTTP/1.1 \n\n    grant_type=client_credentials \n    &client_id=client01\n    &client_secret=qkDwDJlDfig2IpeuUZYKH1W\n    \n```\n Sample Response payload if Credentials are validated successfully \n ```\n HTTP/1.1 200 OK\n    Content-Type: application/json\n    Cache-Control: no-store\n    Pragma: no-cache\n    \n```\n\n```json\n{\n    \"context\": {\n        \"LEVEL_OF_ASSURANCE\": 2\n    },\n    \"expires_in\": 86400 ,\n    \"token_type\": \"Bearer\",\n    \"access_token\": \"MPA1UAAAAVVtMyPSsnksgsd6KsoXYTANpLpWTym+\" \n }\n```\n## PKI Based Authentication \n All entity endpoints required authentication via Bearer Token (Access Token) on HTTP Header. Every request to the REST API must be authenticated via this Token over on HTTP Header. If you want to make a REST request to these API, we assume,\n 1.  You have been granted access to Portal SDK \n2.   You have created System Account User(client ID) for Mobile Access using PKI Credential in SIS Portal \n3.  You have uploaded Public Certificate in SIS Portal \n4. You have appropriate Private Certificate for making REST request \n Sample Request payload for Getting Bearer Token via OpenID \n ```\n  POST /{tenant}/authn/token HTTP/1.1 \n\n    grant_type=urn:hid:oauth:grant-type:client-secret-pki \n    &client_id=client02\n\n```\n Sample Response payload if Credentials are validated successfully \n ```\n HTTP/1.1 200 OK\n    Content-Type: application/json\n    Cache-Control: no-store\n    Pragma: no-cache\n    \n```\n\n```json\n{\n    \"context\": {\n        \"LEVEL_OF_ASSURANCE\": 2\n    },\n    \"expires_in\": 86400 ,\n    \"token_type\": \"Bearer\",\n    \"access_token\": \"MPA1UAAAAVVtMyPSsnksgsd6KsoXYTANpLpWTym+\" \n }\n```\n## Authorization \n If the input credentials are validated successfully the Bearer token is generated. The same token shall be used to invoke these APIs and it should be sent as a part of HTTP Header. Below is the sample HTTP Request Header.\n Example request header to get PACS user details: -\n ```\n  [GET]{Base_URI}/customer/{customer_id}/users/{user_id}\n   HTTP/1.1\n   Authorization: Bearer SlAV32hkKG\n ```\n Once the token is received, Authentication Filter validates the token for authentication and authorization. Once the authorization is granted then data is retrieved and sent as response. Bearer token is never set as a part of response. \n ## Resource format \n The Mobile Access REST API currently supports JSON resource representations only. These API use HTTP GET, POST, PUT, and DELETE methods. In this version of APIs PATCH is not implemented. \n\n  # Api Services \n ##   Common for Search and List functions \n This section details the Default values to be selected if not provided. \n ##  Pagination \nBy default, the system will always show 25 resources at a time.\n\n| **Attribute Name**  | **Data Type**| **Value**|\n| ------------ |------------ | ------------ |\n| startindex  | Number | Mandatory Field. The 1-based index of the 1 first query result. A value less than 1 SHALL be interpreted as 1. If not specified, default to 1. |\n| count  | Number | Mandatory Field. Specifies the desired maximum number of query results per page. A negative value SHALL be interpreted as \"0\". A value of \"0\" indicates no resource results are to be returned except for \"totalResults\".  If not specified, default to 0. If count>25, default 25 resources will be returned. Any Decimal value shall be truncated to whole number. \n\n   ##  Sorting \nBy default, the system will always sort by last modified date in descending order.\n\n| **Attribute Name**  | **Data Type**| **Value**|\n| ------------ |------------ | ------------ |\n| sortBy  | String | If specified, used to order the return responses based on attribute's value, Otherwise, default attribute \"lastmodifieddate\" will be taken.|\n| sortOrder  | String | If specified, the order in which sortBy parameter is applied. Allowed values are \"ascending\" or \"descending\" [case-insensitive]. If not specified, default value will be \"descending\". \n\n ##    Attributes \nAttributes is Optional. System will return only Meta with location of the resource if any of the attributes if are not specified. \n\n| **Meta Attributes**  | **Data Type**| **Value**|\n| ------------ |------------ | ------------ |\n| meta.resourceType  | String | Resource Type.|\n| meta.lastModified  | Meta | Last Modified date time in UTC |\n| meta.location  | Meta | URI location of the resource details  \n\n ## Search Entity \n Search functionality is common to all entities and follows the same pattern. Request and response format is always the same, just the endpoints and resource types change \n ```\n  [POST] https://{BaseUri}/{entity}/.search\n   Accept: application/vnd.assaabloy.ma.credential-management-1.0+json\nSchemas Extensions:\n   \"urn:ietf:params:scim:api:messages:2.0:SearchRequest\"\n   \"urn:ietf:params:scim:api:messages:2.0:ListResponse\"\n ```\n  Filter attribute values (which are alpha numeric) should always be given in quotes \n ### Case Sensitivity \n Attribute Values for the filter Attributes, Filter Values for filters and operators (eq,gt,ge,lt,le,co,sw,ew,pr,ne)are treated as case-exact for search operations \n\n   ### Operator Support(SCIM 1.0) \n | **SCIM Filter Operator**  | **Description**|\n| ------------ | ------------ |\n| eq  | equal |\n| ne  | not equal |\n| gt  | greater than |\n|  ge | greater than or equal to |\n| lt  | less than |\n| le  | less than or equal to |\n| co  | contains |\n| sw  | starts with |\n| ew  | ends with |\n| pr  | presence |\n| and  | logical AND |\n| or  | logical OR |\n| ()  | precedence grouping  \n\n  ### Operator Not Supported(SCIM 2.0) \n\n | **SCIM Filter Operator**  | **Description**|\n| ------------ | ------------ |\n| not  | logical not |\n| []  | Complex attribute filter grouping operator \n\n   \n\n",
    "x-logo" : {
      "url" : "https://cloudservices.hidglobal.com/mobile-access/assets/images/HID-logo-105x42.png"
    }
  },
  "host": "qa-ma.api.assaabloy.com",
  "basePath": "/credential-management",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/vnd.assaabloy.ma.credential-management-1.0+json"
  ],
  "produces": [
    "application/vnd.assaabloy.ma.credential-management-1.0+json"
  ],
  "tags": [
  {
    "description": "Service Consumers will use Mobile Access SDK to execute mobile access operations like enroll users, create invitations, register devices and issue/revoke credentials. Some of the operations have a lead time. To avoid service consumers from repeatedly querying to check the status of such long lead time operations, Service Provider intends to provide callback functionality which will send notifications whenever there is a change in status of these operations.\n\n  To receive these callback notifications Service Consumer will need to register a URL with the Service Provider (For details refer api - `Register for Callback`). This URL must be capable of receiving and processing notifications. Callback URL should in HTTPS. Authentication is optional. However, Only URL Based BASIC Authentication is supported. \n\n Once the callback notifications are pushed to the Service Consumer using the Registered URL, Service Provider will delete the notification after the service consumer acknowledges the notification (i.e. HTTP Response code as `200`). For more details, Refer to the section - `Register for Callback Api Request Schema`. If the Service Provider is not able to reach (i.e. other than response code `200`) Service Consumer, then Service Provider will retry to push notifications for up to 5 times at regular interval. If the notification to service consumer is exhausted with 5 retries, then the notifications will be marked for expiration. These callback notifications will adhere to the `Notifications schema` defined in Meta Endpoints.",
    "name": "Callbacks"
  }
],
  "paths": {
    "/customer/{customer_id}/users": {
      "get": {
        "summary": "List all Users",
        "description": "> **Purpose**: List all Users associated with an organization",
        "operationId": "userList",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/customer_id"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Content-Type"
          },
          {
            "$ref": "#/components/parameters/Accept"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "type": "string",
                "default": "application/vnd.assaabloy.ma.credential-management-1.0+json"
              },
              "Location": {
                "type": "string",
                "default": "{BaseUrl}/customer/{customer_id}/users"
              }
            },
            "schema": {
              "$ref": "#/components/schemas/usersListResponse"
            }
          },
          "401": {
            "$ref": "#/components/examples/unAuthorizedRequest"
          },
          "500": {
            "$ref": "#/components/examples/internalServerErrorRequest"
          }
        }
      },
      "post": {
        "summary": "Create User ",
        "description": "**Purpose**: Create an User associated with an organization",
        "operationId": "userCreate",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/customer_id"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Content-Type"
          },
          {
            "$ref": "#/components/parameters/Accept"
          },
          {
            "$ref": "#/components/parameters/userCreateRequestBody"
          }
        ],
        "responses": {
          "201": {
            "description": "CREATED",
            "headers": {
              "Content-Type": {
                "type": "string",
                "default": "application/vnd.assaabloy.ma.credential-management-1.0+json"
              },
              "Location": {
                "type": "string",
                "default": "{BaseUrl}/customer/{customer_id}/users/{user_id}"
              }
            },
            "schema": {
              "$ref": "#/components/schemas/userCreateResponse"
            }
          },
          "400": {
            "$ref": "#/components/schemas/badRequestError"
          },
          "401": {
            "$ref": "#/components/examples/unAuthorizedRequest"
          },

          "412": {
            "$ref": "#/components/schemas/userPreConditionFailedError"
          },
          "500": {
            "$ref": "#/components/examples/internalServerErrorRequest"
          }
        }
      }
    },
    "/customer/{customer_id}/users/{user_id}": {
      "get": {
        "summary": "Get Specific User Details ",
        "description": "**Purpose**: Get an User associated with an organization",
        "operationId": "userGet",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/customer_id"
          },
          {
            "$ref": "#/components/parameters/user_id"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Content-Type"
          },
          {
            "$ref": "#/components/parameters/Accept"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "type": "string",
                "default": "application/vnd.assaabloy.ma.credential-management-1.0+json"
              },
              "Location": {
                "type": "string",
                "default": "{BaseUrl}/customer/{customer_id}/users/{user_id}"
              }
            },
            "schema": {
              "$ref": "#/components/schemas/userGetResponse"
            }
          },
          "401": {
            "$ref": "#/components/examples/unAuthorizedRequest"
          },
          "404": {
            "$ref": "#/components/examples/urlNotFoundRequest"
          },
          "500": {
            "$ref": "#/components/examples/internalServerErrorRequest"
          }
        }
      },
      "put": {
        "summary": "Update Specific User Details ",
        "description": "**Purpose**: Update an User associated with an organization",
        "operationId": "userUpdate",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/customer_id"
          },
          {
            "$ref": "#/components/parameters/user_id"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Content-Type"
          },
          {
            "$ref": "#/components/parameters/Accept"
          },
          {
            "$ref": "#/components/parameters/userUpdateRequestBody"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "type": "string",
                "default": "application/vnd.assaabloy.ma.credential-management-1.0+json"
              },
              "Location": {
                "type": "string",
                "default": "{BaseUrl}/customer/{customer_id}/users/{user-id}"
              }
            },
            "schema": {
              "$ref": "#/components/schemas/userUpdateResponse"
            }
          },
          "400": {
            "$ref": "#/components/schemas/badRequestError"
          },
          "401": {
            "$ref": "#/components/examples/unAuthorizedRequest"
          },
          "404": {
            "$ref": "#/components/examples/urlNotFoundRequest"
          },

          "500": {
            "$ref": "#/components/examples/internalServerErrorRequest"
          }
        }
      },
      "delete": {
        "summary": "Delete Specific User Details ",
        "description": "**Purpose**: Delete an User associated with an organization",
        "operationId": "userDelete",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/customer_id"
          },
          {
            "$ref": "#/components/parameters/user_id"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Content-Type"
          },
          {
            "$ref": "#/components/parameters/Accept"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/examples/deleteSuccessResponse"
          },
          "401": {
            "$ref": "#/components/examples/unAuthorizedRequest"
          },
          "404": {
            "$ref": "#/components/examples/urlNotFoundRequest"
          },
          "412": {
            "$ref": "#/components/schemas/userPreConditionFailedError"
          },
          "500": {
            "$ref": "#/components/examples/internalServerErrorRequest"
          }
        }
      }
    },
    "/customer/{customer_id}/users/.search": {
      "post": {
        "summary": "Search Users ",
        "description": "**Purpose**: Search for user associated with an organization",
        "operationId": "userSearch",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/customer_id"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Content-Type"
          },
          {
            "$ref": "#/components/parameters/Accept"
          },
          {
            "$ref": "#/components/parameters/userSearchRequestBody"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "type": "string",
                "default": "application/vnd.assaabloy.ma.credential-management-1.0+json"
              },
              "Location": {
                "type": "string",
                "default": "{BaseUrl}/customer/{customer_id}/users/.search"
              }
            },
            "schema": {
              "$ref": "#/components/schemas/userSearchResponse"
            }
          },
          "401": {
            "$ref": "#/components/examples/unAuthorizedRequest"
          },
          "400": {
            "$ref": "#/components/schemas/badRequestError"
          },
          "500": {
            "$ref": "#/components/examples/internalServerErrorRequest"
          }
        }
      }
    },
    "/customer/{customer_id}/users/{user_id}/invitation": {
      "get": {
        "summary": "List all Invitations",
        "description": "**Purpose**: List all Invitations associated with an end user",
        "operationId": "listInvitation",
        "tags": [
          "Invitation"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/customer_id"
          },
          {
            "$ref": "#/components/parameters/user_id"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Content-Type"
          },
          {
            "$ref": "#/components/parameters/Accept"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "type": "string",
                "default": "application/vnd.assaabloy.ma.credential-management-1.0+json"
              },
              "Location": {
                "type": "string",
                "default": "{BaseUrl}/customer/{customer_id}/users/{user_id}/invitation"
              }
            },
            "schema": {
              "$ref": "#/components/schemas/invitationListResponse"
            }
          },
          "401": {
            "$ref": "#/components/examples/unAuthorizedRequest"
          },
          "500": {
            "$ref": "#/components/examples/internalServerErrorRequest"
          }
        }
      },
      "post": {
        "summary": "Create Invitation ",
        "description": "**Purpose**: Create new invitation for an user",
        "operationId": "invitationCreate",
        "tags": [
          "Invitation"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/customer_id"
          },
          {
            "$ref": "#/components/parameters/user_id"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Content-Type"
          },
          {
            "$ref": "#/components/parameters/Accept"
          },
          {
            "$ref": "#/components/parameters/invitationCreateRequestBody"
          }
        ],
        "responses": {
          "201": {
            "description": "CREATED",
            "headers": {
              "Content-Type": {
                "type": "string",
                "default": "application/vnd.assaabloy.ma.credential-management-1.0+json"
              },
              "Location": {
                "type": "string",
                "default": "{BaseUrl}/customer/{customer_id}/users/{user_id}"
              }
            },
            "schema": {
              "$ref": "#/components/schemas/invitationCreateResponse"
            }
          },
          "401": {
            "$ref": "#/components/examples/unAuthorizedRequest"
          },
          "400": {
            "$ref": "#/components/schemas/badRequestError"
          },
          "404": {
            "$ref": "#/components/examples/urlNotFoundRequest"
          },
          "412": {
            "$ref": "#/components/schemas/invitationPreConditionFailedError"
          },
          "500": {
            "$ref": "#/components/examples/internalServerErrorRequest"
          }
        }
      }
    },
    "/customer/{customer_id}/invitation/{invitation_id}": {
      "get": {
        "summary": "Get Specific User Invitation Details ",
        "description": "**Purpose**: Get invitation specific to an user",
        "operationId": "getInvitation",
        "tags": [
          "Invitation"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/customer_id"
          },
          {
            "$ref": "#/components/parameters/invitation_id"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Content-Type"
          },
          {
            "$ref": "#/components/parameters/Accept"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "type": "string",
                "default": "application/vnd.assaabloy.ma.credential-management-1.0+json"
              },
              "Location": {
                "type": "string",
                "default": "{BaseUrl}/customer/{customer_id}/invitation/{invitation_id}"
              }
            },
            "schema": {
              "$ref": "#/components/schemas/invitationGetResponse"
            }
          },
          "401": {
            "$ref": "#/components/examples/unAuthorizedRequest"
          },
          "404": {
            "$ref": "#/components/examples/urlNotFoundRequest"
          },
          "500": {
            "$ref": "#/components/examples/internalServerErrorRequest"
          }
        }
      },
      "delete": {
        "summary": "Cancel Invitation",
        "description": "**Purpose**: Cancel invitation specific to an user",
        "operationId": "invitationDelete",
        "tags": [
          "Invitation"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/customer_id"
          },
          {
            "$ref": "#/components/parameters/invitation_id"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Content-Type"
          },
          {
            "$ref": "#/components/parameters/Accept"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/examples/deleteSuccessResponse"
          },
          "401": {
            "$ref": "#/components/examples/unAuthorizedRequest"
          },
          "404": {
            "$ref": "#/components/examples/urlNotFoundRequest"
          },
          "412": {
            "$ref": "#/components/schemas/invitationPreConditionFailedError"
          },
          "500": {
            "$ref": "#/components/examples/internalServerErrorRequest"
          }
        }
      }
    },
    "/customer/{customer_id}/users/{user_id}/invitation/.search": {
      "post": {
        "summary": "Search Invitations ",
        "description": "Search for user invitation",
        "operationId": "invitationSearch",
        "tags": [
          "Invitation"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/customer_id"
          },
          {
            "$ref": "#/components/parameters/user_id"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Content-Type"
          },
          {
            "$ref": "#/components/parameters/Accept"
          },
          {
            "$ref": "#/components/parameters/invitationSearchRequestBody"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "type": "string",
                "default": "application/vnd.assaabloy.ma.credential-management-1.0+json"
              },
              "Location": {
                "type": "string",
                "default": "{BaseUrl}/customer/{customer_id}/invitation/.search"
              }
            },
            "schema": {
              "$ref": "#/components/schemas/invitationSearchResponse"
            }
          },
          "401": {
            "$ref": "#/components/examples/unAuthorizedRequest"
          },
          "400": {
            "$ref": "#/components/schemas/badRequestError"
          },
          "500": {
            "$ref": "#/components/examples/internalServerErrorRequest"
          }
        }
      }
    },
    "/customer/{customer_id}/invitation/{invitation_id}/email": {
      "post": {
        "summary": "Send Invitation ",
        "description": "Send invitation email for an user",
        "operationId": "invitationSend",
        "tags": [
          "Invitation"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/customer_id"
          },
          {
            "$ref": "#/components/parameters/invitation_id"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Content-Type"
          },
          {
            "$ref": "#/components/parameters/Accept"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/examples/successResponse"
          },
          "401": {
            "$ref": "#/components/examples/unAuthorizedRequest"
          },
          "400": {
            "$ref": "#/components/schemas/badRequestError"
          },
          "404": {
            "$ref": "#/components/examples/urlNotFoundRequest"
          },
          "412": {
            "$ref": "#/components/schemas/invitationPreConditionFailedError"
          },
          "500": {
            "$ref": "#/components/examples/internalServerErrorRequest"
          }
        }
      }
    },
    "/customer/{customer_id}/part-number": {
      "get": {
        "summary": "List all Part Numbers",
        "description": "**Purpose**: List all Part numbers associated with an organization",
        "operationId": "partNumberList",
        "tags": [
          "Part Number"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/customer_id"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Content-Type"
          },
          {
            "$ref": "#/components/parameters/Accept"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "type": "string",
                "default": "application/vnd.assaabloy.ma.credential-management-1.0+json"
              },
              "Location": {
                "type": "string",
                "default": "{BaseUrl}/customer/{customer_id}/part-number"
              }
            },
            "schema": {
              "$ref": "#/components/schemas/partNumberListResponse"
            }
          },
          "401": {
            "$ref": "#/components/examples/unAuthorizedRequest"
          },
          "500": {
            "$ref": "#/components/examples/internalServerErrorRequest"
          }
        }
      }
    },
    "/customer/{customer_id}/part-number/{part_number_id}": {
      "get": {
        "summary": "Get Specific Part Number Details ",
        "description": "**Purpose**: Get specific Part number associated with an organization",
        "operationId": "partNumberGet",
        "tags": [
          "Part Number"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/customer_id"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Content-Type"
          },
          {
            "$ref": "#/components/parameters/Accept"
          },
          {
            "$ref": "#/components/parameters/part_number_id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "type": "string",
                "default": "application/vnd.assaabloy.ma.credential-management-1.0+json"
              },
              "Location": {
                "type": "string",
                "default": "{BaseUrl}/customer/{customer_id}/part-number/{part-number-id}"
              }
            },
            "schema": {
              "$ref": "#/components/schemas/partNumberGetResponse"
            }
          },
          "401": {
            "$ref": "#/components/examples/unAuthorizedRequest"
          },
          "404": {
            "$ref": "#/components/examples/urlNotFoundRequest"
          },
          "500": {
            "$ref": "#/components/examples/internalServerErrorRequest"
          }
        }
      }
    },
    "/customer/{customer_id}/part-number/.search": {
      "post": {
        "summary": "Search Part Numbers ",
        "description": "**Purpose**: Search for Part numbers associated with an organization",
        "operationId": "partNumberSearch",
        "tags": [
          "Part Number"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/customer_id"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Content-Type"
          },
          {
            "$ref": "#/components/parameters/Accept"
          },
          {
            "$ref": "#/components/parameters/partNumberSearchRequestBody"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "type": "string",
                "default": "application/vnd.assaabloy.ma.credential-management-1.0+json"
              },
              "Location": {
                "type": "string",
                "default": "{BaseUrl}/customer/{customer_id}/part-number"
              }
            },
            "schema": {
              "$ref": "#/components/schemas/partNumberSearchResponse"
            }
          },
          "401": {
            "$ref": "#/components/examples/unAuthorizedRequest"
          },
          "400": {
            "$ref": "#/components/schemas/badRequestError"
          },
          "500": {
            "$ref": "#/components/examples/internalServerErrorRequest"
          }
        }
      }
    },
    "/customer/{customer_id}/users/{user_id}/credential-container": {
      "get": {
        "summary": "List all Credential Containers",
        "description": "**Purpose**: List all credential containers associated with an user",
        "operationId": "credentialContainersList",
        "tags": [
          "Credential Container"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/customer_id"
          },
          {
            "$ref": "#/components/parameters/user_id"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Content-Type"
          },
          {
            "$ref": "#/components/parameters/Accept"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "type": "string",
                "default": "application/vnd.assaabloy.ma.credential-management-1.0+json"
              },
              "Location": {
                "type": "string",
                "default": "{BaseUrl}/customer/{customer_id}/users/{user_id}/credential-container"
              }
            },
            "schema": {
              "$ref": "#/components/schemas/credentialContainerListResponse"
            }
          },
          "401": {
            "$ref": "#/components/examples/unAuthorizedRequest"
          },
          "500": {
            "$ref": "#/components/examples/internalServerErrorRequest"
          }
        }
      }
    },
    "/customer/{customer_id}/credential-container/{credential_container_id}": {
      "get": {
        "summary": "Get Credential Container",
        "description": "**Purpose**: Get credential container associated with an user",
        "operationId": "credentialContainerGet",
        "tags": [
          "Credential Container"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/customer_id"
          },
          {
            "$ref": "#/components/parameters/credential_container_id"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Content-Type"
          },
          {
            "$ref": "#/components/parameters/Accept"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "type": "string",
                "default": "application/vnd.assaabloy.ma.credential-management-1.0+json"
              },
              "Location": {
                "type": "string",
                "default": "{BaseUrl}/customer/{customer_id}/credential-container/{credential_container_id}"
              }
            },
            "schema": {
              "$ref": "#/components/schemas/credentialContainerGetResponse"
            }
          },
          "401": {
            "$ref": "#/components/examples/unAuthorizedRequest"
          },
          "404": {
            "$ref": "#/components/examples/urlNotFoundRequest"
          },
          "500": {
            "$ref": "#/components/examples/internalServerErrorRequest"
          }
        }
      },
      "delete": {
        "summary": "Delete Credential Container",
        "description": "**Purpose**: Delete credential container associated with an user",
        "operationId": "credentialContainerDelete",
        "tags": [
          "Credential Container"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/customer_id"
          },
          {
            "$ref": "#/components/parameters/credential_container_id"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Content-Type"
          },
          {
            "$ref": "#/components/parameters/Accept"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/examples/deleteSuccessResponse"
          },
          "401": {
            "$ref": "#/components/examples/unAuthorizedRequest"
          },
          "404": {
            "$ref": "#/components/examples/urlNotFoundRequest"
          },
          "500": {
            "$ref": "#/components/examples/internalServerErrorRequest"
          }
        }
      }
    },
    "/customer/{customer_id}/credential/{credential_id}": {
      "get": {
        "summary": "Get Credential Specific",
        "description": "**Purpose**: Get credential associated with an organization",
        "operationId": "credentialGet",
        "tags": [
          "Credential"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/customer_id"
          },
          {
            "$ref": "#/components/parameters/credential_id"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "type": "string",
                "default": "application/vnd.assaabloy.ma.credential-management-1.0+json"
              },
              "Location": {
                "type": "string",
                "default": "{BaseUrl}/customer/{customer_id}/credential/{credential_id}"
              }
            },
            "schema": {
              "$ref": "#/components/schemas/credentialGetResponse"
            }
          },
          "401": {
            "$ref": "#/components/examples/unAuthorizedRequest"
          },
          "404": {
            "$ref": "#/components/examples/urlNotFoundRequest"
          },
          "500": {
            "$ref": "#/components/examples/internalServerErrorRequest"
          }
        }
      },
      "delete": {
        "summary": "Revoke Credential",
        "description": "**Purpose**: Revoke credential associated with an organization",
        "operationId": "credentialDelete",
        "tags": [
          "Credential"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/customer_id"
          },
          {
            "$ref": "#/components/parameters/credential_id"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Content-Type"
          },
          {
            "$ref": "#/components/parameters/Accept"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/examples/deleteSuccessResponse"
          },
          "401": {
            "$ref": "#/components/examples/unAuthorizedRequest"
          },
          "404": {
            "$ref": "#/components/examples/urlNotFoundRequest"
          },
          "412": {
            "$ref": "#/components/schemas/credentialPreConditionFailedError"
          },
          "500": {
            "$ref": "#/components/examples/internalServerErrorRequest"
          }
        }
      }
    },
    "/customer/{customer_id}/credential-container/{credential_container_id}/credential": {
      "get": {
        "summary": "Get Credential - Credential Container Specific",
        "description": "**Purpose**: Get credentials specific to credential container associated with an organization",
        "operationId": "credentialListByCredentialContainer",
        "tags": [
          "Credential"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/customer_id"
          },
          {
            "$ref": "#/components/parameters/credential_container_id"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Content-Type"
          },
          {
            "$ref": "#/components/parameters/Accept"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "type": "string",
                "default": "application/vnd.assaabloy.ma.credential-management-1.0+json"
              },
              "Location": {
                "type": "string",
                "default": "{BaseUrl}/customer/{customer_id}/credential-container/{credential_container_id}/credential"
              }
            },
            "schema": {
              "$ref": "#/components/schemas/credentialListResponse"
            }
          },
          "401": {
            "$ref": "#/components/examples/unAuthorizedRequest"
          },
          "500": {
            "$ref": "#/components/examples/internalServerErrorRequest"
          }
        }
      },
      "post": {
        "summary": "Issue Credential",
        "description": "**Purpose**: Issue credential associated with an organization",
        "operationId": "credentialCreate",
        "tags": [
          "Credential"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/customer_id"
          },
          {
            "$ref": "#/components/parameters/credential_container_id"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Content-Type"
          },
          {
            "$ref": "#/components/parameters/Accept"
          },
          {
            "$ref": "#/components/parameters/credentialCreateRequestBody"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "type": "string",
                "default": "application/vnd.assaabloy.ma.credential-management-1.0+json"
              },
              "Location": {
                "type": "string",
                "default": "{BaseUrl}/customer/{customer_id}/users/{user_id}"
              }
            },
            "schema": {
              "$ref": "#/components/schemas/credentialCreateResponse"
            }
          },
          "400": {
            "$ref": "#/components/schemas/badRequestError"
          },
          "404": {
            "$ref": "#/components/examples/urlNotFoundRequest"
          },
          "412": {
            "$ref": "#/components/schemas/credentialPreConditionFailedError"
          },
          "500": {
            "$ref": "#/components/examples/internalServerErrorRequest"
          }
        }
      }
    },
    "/customer/{customer_id}/part-number/{part_number_id}/credential": {
      "get": {
        "summary": "Get Credential - Part Number Specific",
        "description": "**Purpose**: Get credentials specific to part number associated with an organization",
        "operationId": "credentialGetByPartNumber",
        "tags": [
          "Credential"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/customer_id"
          },
          {
            "$ref": "#/components/parameters/part_number_id"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Content-Type"
          },
          {
            "$ref": "#/components/parameters/Accept"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "type": "string",
                "default": "application/vnd.assaabloy.ma.credential-management-1.0+json"
              },
              "Location": {
                "type": "string",
                "default": "{BaseUrl}/customer/{customer_id}/users/{user_id}/credential-container"
              }
            },
            "schema": {
              "$ref": "#/components/schemas/credentialListResponse"
            }
          },
          "401": {
            "$ref": "#/components/examples/unAuthorizedRequest"
          },
          "500": {
            "$ref": "#/components/examples/internalServerErrorRequest"
          }
        }
      }
    },
    "/customer/{customer_id}/part-number/{part_number_id}/credential/.search": {
      "post": {
        "summary": "Search Credential",
        "description": "**Purpose**: Search for credentials associated with an organization",
        "operationId": "credentialSearch",
        "tags": [
          "Credential"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/customer_id"
          },
          {
            "$ref": "#/components/parameters/part_number_id"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Content-Type"
          },
          {
            "$ref": "#/components/parameters/Accept"
          },
          {
            "$ref": "#/components/parameters/credentialSearchRequestBody"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "type": "string",
                "default": "application/vnd.assaabloy.ma.credential-management-1.0+json"
              },
              "Location": {
                "type": "string",
                "default": "{BaseUrl}/customer/{customer_id}/part-number"
              }
            },
            "schema": {
              "$ref": "#/components/schemas/credentialSearchResponse"
            }
          },
          "401": {
            "$ref": "#/components/examples/unAuthorizedRequest"
          },
          "400": {
            "$ref": "#/components/schemas/badRequestError"
          },
          "500": {
            "$ref": "#/components/examples/internalServerErrorRequest"
          }
        }
      }
    },
    "/customer/{customer_id}/callback-registration": {
      "post": {
        "summary": "Register for Callback",
        "description": "**Purpose**: The service to register for callback notifications on the status changes for users, invitations, devices, and credentials.",
        "operationId": "callbackRegister",
        "tags": [
         "Callbacks"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/customer_id"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Content-Type"
          },
          {
            "$ref": "#/components/parameters/Accept"
          },
          {
            "$ref": "#/components/parameters/callbackRequestBody"
          }
        ],
        "responses": {
          "201": {
            "description": "CREATED",
            "headers": {
              "Content-Type": {
                "type": "string",
                "default": "application/vnd.assaabloy.ma.credential-management-1.0+json"
              },
              "Location": {
                "type": "string",
                "default": "{BaseUrl}/customer/{customer_id}/users/{user_id}"
              }
            },
            "schema": {
              "$ref": "#/components/schemas/callbackResponse"
            }
          },
          "401": {
            "$ref": "#/components/examples/unAuthorizedRequest"
          },
          "400": {
            "$ref": "#/components/schemas/badRequestError"
          },
          "404": {
            "$ref": "#/components/examples/urlNotFoundRequest"
          },
          "412": {
            "$ref": "#/components/schemas/callbackPreConditionFailedError"
          },
          "500": {
            "$ref": "#/components/examples/internalServerErrorRequest"
          }
        }
      }
    },
    "/customer/{customer_id}/callback-registration/{callback_registration_id}": {
      "get": {
        "summary": "Get Callback",
        "description": "**Purpose**: The service to retrieve the registered callback URL",
        "operationId": "callbackGet",
        "tags": [
          "Callbacks"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/customer_id"
          },
          {
            "$ref": "#/components/parameters/callback_registration_id"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Content-Type"
          },
          {
            "$ref": "#/components/parameters/Accept"
          },
          {
            "$ref": "#/components/parameters/callbackRequestBody"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "type": "string",
                "default": "application/vnd.assaabloy.ma.credential-management-1.0+json"
              },
              "Location": {
                "type": "string",
                "default": "{BaseUrl}/customer/{customer_id}/callback-registration/{callback_registration_id}"
              }
            },
            "schema": {
              "$ref": "#/components/schemas/callbackResponse"
            }
          },
          "401": {
            "$ref": "#/components/examples/unAuthorizedRequest"
          },
          "404": {
            "$ref": "#/components/examples/urlNotFoundRequest"
          },
          "500": {
            "$ref": "#/components/examples/internalServerErrorRequest"
          }
        }
      },
      "put": {
        "summary": "Update Callback",
        "description": "**Purpose**: The service to update the registered callback URL",
        "operationId": "callbackUpdate",
        "tags": [
          "Callbacks"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/customer_id"
          },
          {
            "$ref": "#/components/parameters/callback_registration_id"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Content-Type"
          },
          {
            "$ref": "#/components/parameters/Accept"
          },
          {
            "$ref": "#/components/parameters/callbackRequestBody"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "type": "string",
                "default": "application/vnd.assaabloy.ma.credential-management-1.0+json"
              },
              "Location": {
                "type": "string",
                "default": "{BaseUrl}/customer/{customer_id}/callback-registration/{callback_registration_id}"
              }
            },
            "schema": {
              "$ref": "#/components/schemas/callbackResponse"
            }
          },
          "401": {
            "$ref": "#/components/examples/unAuthorizedRequest"
          },
          "400": {
            "$ref": "#/components/schemas/badRequestError"
          },
          "404": {
            "$ref": "#/components/examples/urlNotFoundRequest"
          },
          "500": {
            "$ref": "#/components/examples/internalServerErrorRequest"
          }
        }
      },
      "delete": {
        "summary": "UnRegister Callback",
        "description": "**Purpose**: The service to delete the registered callback URL. This implies that the organization will stop receiving callback notifications from Service Provider.",
        "operationId": "callbackDelete",
        "tags": [
          "Callbacks"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/customer_id"
          },
          {
            "$ref": "#/components/parameters/callback_registration_id"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Content-Type"
          },
          {
            "$ref": "#/components/parameters/Accept"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/examples/deleteSuccessResponse"
          },
          "401": {
            "$ref": "#/components/examples/unAuthorizedRequest"
          },
          "404": {
            "$ref": "#/components/examples/urlNotFoundRequest"
          },
          "412": {
            "$ref": "#/components/schemas/callbackPreConditionFailedError"
          },
          "500": {
            "$ref": "#/components/examples/internalServerErrorRequest"
          }
        }
      }
    },
    "/customer/{customer_id}/sdk-version": {
      "get": {
        "summary": "Get Version",
        "description": "**Purpose**: To get the version of SDK",
        "operationId": "sdkVersionGet",
        "tags": [
          "Version"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/customer_id"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Content-Type"
          },
          {
            "$ref": "#/components/parameters/Accept"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "type": "string",
                "default": "application/vnd.assaabloy.ma.credential-management-1.0+json"
              },
              "Location": {
                "type": "string",
                "default": "{BaseUrl}/customer/{customer_id}/sdk-version"
              }
            },
            "schema": {
              "$ref": "#/components/schemas/sdkVersionGetResponse"
            }
          },
          "401": {
            "$ref": "#/components/examples/unAuthorizedRequest"
          },
          "404": {
            "$ref": "#/components/examples/urlNotFoundRequest"
          },
          "500": {
            "$ref": "#/components/examples/internalServerErrorRequest"
          }
        }
      }
    },
    "/customer/{customer_id}/schemas/urn:hid:scim:api:ma:1.0:UserAction": {
      "get": {
        "summary": "User Action Schema",
        "description": "To retrieve the schema for User Action",
        "operationId": "userActionSchema",
        "tags": [
          "Meta Endpoints"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/customer_id"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Content-Type"
          },
          {
            "$ref": "#/components/parameters/Accept"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "type": "string",
                "default": "application/vnd.assaabloy.ma.credential-management-1.0+json"
              },
              "Location": {
                "type": "string",
                "default": "{BaseUrl}/customer/{customer_id}/schemas/urn:hid:scim:api:ma:1.0:UserAction"
              }
            },
            "schema": {
              "$ref": "#/components/schemas/scimSchemaWithCanonicalValues"
            },
            "examples": {
              "application/json": {
                "id": "urn:hid:scim:api:ma:1.0:UserAction",
                "name": "User Action",
                "attributes": [
                  {
                    "name": "createInvitationCode",
                    "type": "string",
                    "multiValued": false,
                    "description": "Creates Invitation Code. Values Y/N",
                    "required": false,
                    "canonicalValues": [
                      "y",
                      "n"
                    ],
                    "caseExact": false,
                    "mutability": "writeOnly",
                    "returned": "never",
                    "uniqueness": "none"
                  },
                  {
                    "name": "sendInvitationEmail",
                    "type": "string",
                    "multiValued": false,
                    "description": "Sends Email on creating invitation. Values Y/N",
                    "required": false,
                    "canonicalValues": [
                      "y",
                      "n"
                    ],
                    "caseExact": false,
                    "mutability": "writeOnly",
                    "returned": "never",
                    "uniqueness": "none"
                  },
                  {
                    "name": "assignCredential",
                    "type": "string",
                    "multiValued": false,
                    "description": "Assign Credential. Values Y/N",
                    "required": false,
                    "canonicalValues": [
                      "y",
                      "n"
                    ],
                    "caseExact": false,
                    "mutability": "writeOnly",
                    "returned": "never",
                    "uniqueness": "none"
                  },
                  {
                    "name": "partNumber",
                    "type": "string",
                    "multiValued": false,
                    "description": "Part Number for issuing the Credential",
                    "required": false,
                    "caseExact": true,
                    "mutability": "writeOnly",
                    "returned": "never",
                    "uniqueness": "none"
                  },
                  {
                    "name": "credential",
                    "type": "integer",
                    "multiValued": false,
                    "description": "Issue the provided Mobile Id to the Credential-Container",
                    "required": false,
                    "caseExact": true,
                    "mutability": "writeOnly",
                    "returned": "never",
                    "uniqueness": "none"
                  }
                ],
                "meta": {
                  "resourceType": "Schema",
                  "location": ""
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/examples/unAuthorizedRequest"
          },
          "404": {
            "$ref": "#/components/examples/urlNotFoundRequest"
          },
          "500": {
            "$ref": "#/components/examples/internalServerErrorRequest"
          }
        }
      }
    },
    "/customer/{customer_id}/schemas/urn:ietf:params:scim:schemas:core:2.0:User": {
      "get": {
        "summary": "User Schema",
        "description": "To retrieve the schema for User",
        "operationId": "userSchema",
        "tags": [
          "Meta Endpoints"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/customer_id"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Content-Type"
          },
          {
            "$ref": "#/components/parameters/Accept"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "type": "string",
                "default": "application/vnd.assaabloy.ma.credential-management-1.0+json"
              },
              "Location": {
                "type": "string",
                "default": "{BaseUrl}/customer/{customer_id}/schemas/urn:ietf:params:scim:schemas:core:2.0:User"
              }
            },
            "schema": {
              "$ref": "#/components/schemas/scimSchemaWithSubAttribute"
            },
            "examples": {
              "application/json": {
                "id": "urn:ietf:params:scim:schemas:core:2.0:User",
                "name": "User",
                "description": "Mobile Access User",
                "attributes": [
                  {
                    "name": "id",
                    "type": "integer",
                    "multiValued": false,
                    "description": "Unique identifier for the User typically used by the user to directly identified by the Service Provider.",
                    "required": false,
                    "caseExact": true,
                    "mutability": "readOnly",
                    "returned": "always",
                    "uniqueness": "global"
                  },
                  {
                    "name": "externalId",
                    "type": "string",
                    "multiValued": false,
                    "description": "This is provided by Service Consumer. This attribute will be used to uniquely identify the enrolled PACS user between consumer and HID systems.",
                    "required": true,
                    "caseExact": true,
                    "mutability": "readWrite",
                    "returned": "default",
                    "uniqueness": "none"
                  },
                  {
                    "name": "name",
                    "type": "complex",
                    "multiValued": false,
                    "description": "The name of the User, suitable for display to end-users.",
                    "subattributes": [
                      {
                        "name": "givenName ",
                        "type": "string",
                        "multiValued": false,
                        "description": "A human readable name, primarily used for display purposes.",
                        "required": true,
                        "caseExact": true,
                        "mutability": "readWrite",
                        "returned": "default",
                        "uniqueness": "none"
                      },
                      {
                        "name": "familyName",
                        "type": "string",
                        "multiValued": false,
                        "description": "A human readable name, primarily used for display purposes.",
                        "required": true,
                        "caseExact": true,
                        "mutability": "readWrite",
                        "returned": "default",
                        "uniqueness": "none"
                      }
                    ],
                    "required": true,
                    "caseExact": true,
                    "mutability": "readWrite",
                    "returned": "request",
                    "uniqueness": "none"
                  },
                  {
                    "name": "emails",
                    "type": "complex",
                    "multiValued": true,
                    "description": "E-mail addresses for the user.",
                    "subAttributes": [
                      {
                        "name": "value",
                        "type": "string",
                        "multiValued": false,
                        "description": "E-mail addresses for the user.",
                        "required": true,
                        "caseExact": true,
                        "mutability": "readWrite",
                        "returned": "default",
                        "uniqueness": "global"
                      }
                    ],
                    "required": true,
                    "caseExact": true,
                    "mutability": "readWrite",
                    "returned": "default",
                    "uniqueness": "global"
                  },
                  {
                    "name": "urn:hid:scim:api:ma:1.0:UserAction",
                    "type": "reference",
                    "referenceTypes": "urn:hid:scim:api:ma:1.0:UserAction",
                    "multiValued": true,
                    "description": "User Extension to Create Invitation/ Issue Credential while enrolling user",
                    "required": false,
                    "caseExact": true,
                    "mutability": "writeOnly",
                    "returned": "never",
                    "uniqueness": "none"
                  }
                ],
                "meta": {
                  "resourceType": "Schema",
                  "location": ""
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/examples/unAuthorizedRequest"
          },
          "404": {
            "$ref": "#/components/examples/urlNotFoundRequest"
          },
          "500": {
            "$ref": "#/components/examples/internalServerErrorRequest"
          }
        }
      }
    },
    "/customer/{customer_id}/schemas/urn:hid:scim:api:ma:1.0:UserInvitation": {
      "get": {
        "summary": "User Invitation Schema",
        "description": "To retrieve the schema for User Invitation",
        "operationId": "userInvitationSchema",
        "tags": [
          "Meta Endpoints"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/customer_id"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Content-Type"
          },
          {
            "$ref": "#/components/parameters/Accept"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "type": "string",
                "default": "application/vnd.assaabloy.ma.credential-management-1.0+json"
              },
              "Location": {
                "type": "string",
                "default": "{BaseUrl}/customer/{customer_id}/schemas/urn:hid:scim:api:ma:1.0:UserInvitation"
              }
            },
            "schema": {
              "$ref": "#/components/schemas/scimSchema"
            },
            "examples": {
              "application/json": {
                "id": "urn:hid:scim:api:ma:1.0:UserInvitation",
                "name": "Invitation",
                "description": "Mobile Access Invitation",
                "attributes": [
                  {
                    "name": "id",
                    "type": "integer",
                    "multiValued": false,
                    "description": "Unique identifier for the Invitations directly identified by the Service Provider.",
                    "required": true,
                    "caseExact": true,
                    "mutability": "readOnly",
                    "returned": "always",
                    "uniqueness": "global"
                  },
                  {
                    "name": "invitationCode",
                    "type": "string",
                    "multiValued": false,
                    "description": "Code is represented in blocks of 4 sepaerated by a \"-\". Each block contains 4 alphanumeric characters",
                    "required": false,
                    "caseExact": true,
                    "mutability": "readOnly",
                    "returned": "default",
                    "uniqueness": "Global"
                  },
                  {
                    "name": "createdDate",
                    "type": "dateTime ",
                    "multiValued": false,
                    "description": "Date and Time on which the Invitation is created. Represented in UTC Format",
                    "required": false,
                    "caseExact": true,
                    "mutability": "readOnly",
                    "returned": "default",
                    "uniqueness": "none"
                  },
                  {
                    "name": "expirationDate",
                    "type": "dateTime ",
                    "multiValued": false,
                    "description": "Invitation code expiration Date and Time. Represented in UTC Format",
                    "required": false,
                    "caseExact": true,
                    "mutability": "readOnly",
                    "returned": "default",
                    "uniqueness": "none"
                  },
                  {
                    "name": "status",
                    "type": "string",
                    "multiValued": false,
                    "description": "Represents the current status of an InvitationCode",
                    "required": false,
                    "caseExact": true,
                    "mutability": "readOnly",
                    "returned": "default",
                    "uniqueness": "none"
                  }
                ],
                "meta": {
                  "resourceType": "Schema",
                  "location": ""
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/examples/unAuthorizedRequest"
          },
          "404": {
            "$ref": "#/components/examples/urlNotFoundRequest"
          },
          "500": {
            "$ref": "#/components/examples/internalServerErrorRequest"
          }
        }
      }
    },
    "/customer/{customer_id}/schemas/urn:hid:scim:api:ma:1.0:Credential": {
      "get": {
        "summary": "Credential Schema",
        "description": "To retrieve the schema for Credential",
        "operationId": "credentialSchema",
        "tags": [
          "Meta Endpoints"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/customer_id"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Content-Type"
          },
          {
            "$ref": "#/components/parameters/Accept"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "type": "string",
                "default": "application/vnd.assaabloy.ma.credential-management-1.0+json"
              },
              "Location": {
                "type": "string",
                "default": "{BaseUrl}/customer/{customer_id}/schemas/urn:hid:scim:api:ma:1.0:Credential"
              }
            },
            "schema": {
              "$ref": "#/components/schemas/scimSchema"
            },
            "examples": {
              "application/json": {
                "id": "urn:hid:scim:api:ma:1.0:Credential",
                "name": "User Credential",
                "description": "Mobile Access Credential-Container's Credential",
                "attributes": [
                  {
                    "name": "id",
                    "type": "integer",
                    "multiValued": false,
                    "description": "The internal id (Unique) to lookup the Credential which is of type INTEGER.",
                    "required": false,
                    "caseExact": true,
                    "mutability": "readOnly",
                    "returned": "default",
                    "uniqueness": "global"
                  },
                  {
                    "name": "partNumber",
                    "type": "string",
                    "multiValued": false,
                    "description": "Credential binded part number",
                    "required": false,
                    "caseExact": true,
                    "mutability": "readOnly",
                    "returned": "default",
                    "uniqueness": "none"
                  },
                  {
                    "name": "partnumberFriendlyName",
                    "type": "string",
                    "multiValued": false,
                    "description": "Friendly Name associated to Credential's part number",
                    "required": false,
                    "caseExact": true,
                    "mutability": "readOnly",
                    "returned": "default",
                    "uniqueness": "none"
                  },
                  {
                    "name": "cardNumber",
                    "type": "integer",
                    "multiValued": false,
                    "description": "Credential card number",
                    "required": false,
                    "caseExact": true,
                    "mutability": "readOnly",
                    "returned": "default",
                    "uniqueness": "none"
                  },
                  {
                    "name": "referenceNumber",
                    "type": "string",
                    "multiValued": false,
                    "description": "Credential Reference number",
                    "required": false,
                    "caseExact": true,
                    "mutability": "readOnly",
                    "returned": "default",
                    "uniqueness": "none"
                  },
                  {
                    "name": "credentialType",
                    "type": "string",
                    "multiValued": false,
                    "description": "Credential  Type",
                    "required": false,
                    "caseExact": true,
                    "mutability": "readOnly",
                    "returned": "default",
                    "uniqueness": "none"
                  },
                  {
                    "name": "status",
                    "type": "string",
                    "multiValued": false,
                    "description": "Represents the current status of an User's Credential-Container",
                    "required": false,
                    "caseExact": true,
                    "mutability": "readOnly",
                    "returned": "default",
                    "uniqueness": "none"
                  }
                ],
                "meta": {
                  "resourceType": "Schema",
                  "location": ""
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/examples/unAuthorizedRequest"
          },
          "404": {
            "$ref": "#/components/examples/urlNotFoundRequest"
          },
          "500": {
            "$ref": "#/components/examples/internalServerErrorRequest"
          }
        }
      }
    },
    "/customer/{customer_id}/schemas/urn:hid:scim:api:ma:1.0:CredentialContainer": {
      "get": {
        "summary": "Credential Container Schema",
        "description": "To retrieve the schema for Credential Container",
        "operationId": "credentialContainerSchema",
        "tags": [
          "Meta Endpoints"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/customer_id"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Content-Type"
          },
          {
            "$ref": "#/components/parameters/Accept"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "type": "string",
                "default": "application/vnd.assaabloy.ma.credential-management-1.0+json"
              },
              "Location": {
                "type": "string",
                "default": "{BaseUrl}/customer/{customer_id}/schemas/urn:hid:scim:api:ma:1.0:CredentialContainer"
              }
            },
            "schema": {
              "$ref": "#/components/schemas/scimSchema"
            },
            "examples": {
              "application/json": {
                "id": "urn:hid:scim:api:ma:1.0:CredentialContainer",
                "name": "User Credential Container",
                "description": "Mobile Access Credential Container",
                "attributes": [
                  {
                    "name": "id",
                    "type": "integer",
                    "multiValued": false,
                    "description": "The internal id (Unique) to lookup the User's Credential-Container which is of type INTEGER.",
                    "required": true,
                    "caseExact": true,
                    "mutability": "readOnly",
                    "returned": "default",
                    "uniqueness": "global"
                  },
                  {
                    "name": "osVersion",
                    "type": "string",
                    "multiValued": false,
                    "description": "Registered Credential-Container's Operating system version",
                    "required": false,
                    "caseExact": true,
                    "mutability": "readOnly",
                    "returned": "default",
                    "uniqueness": "none"
                  },
                  {
                    "name": "secureElementType",
                    "type": "string",
                    "multiValued": false,
                    "description": "Description Required",
                    "required": false,
                    "caseExact": true,
                    "mutability": "readOnly",
                    "returned": "default",
                    "uniqueness": "none"
                  },
                  {
                    "name": "manufacturer",
                    "type": "string",
                    "multiValued": false,
                    "description": "The Manufacturer of the Credential-Container",
                    "required": false,
                    "caseExact": false,
                    "mutability": "readOnly",
                    "returned": "default",
                    "uniqueness": "none"
                  },
                  {
                    "name": "model",
                    "type": "string",
                    "multiValued": false,
                    "description": "Registered Credential-Container Model",
                    "required": false,
                    "caseExact": true,
                    "mutability": "readOnly",
                    "returned": "default",
                    "uniqueness": "none"
                  },
                  {
                    "name": "applicationVersion",
                    "type": "string",
                    "multiValued": false,
                    "description": "HID Mobile Access application version running on the Credential-Container",
                    "required": false,
                    "caseExact": true,
                    "mutability": "readOnly",
                    "returned": "default",
                    "uniqueness": "none"
                  },
                  {
                    "name": "simOperator",
                    "type": "string",
                    "multiValued": false,
                    "description": "Credential-Container's Subscriber Identity Module provider",
                    "required": false,
                    "caseExact": true,
                    "mutability": "readOnly",
                    "returned": "default",
                    "uniqueness": "none"
                  },
                  {
                    "name": "bluetoothCapability",
                    "type": "string",
                    "multiValued": false,
                    "description": "Credential-Container is capable of bluetooth [Y/N]",
                    "required": false,
                    "caseExact": true,
                    "mutability": "readOnly",
                    "returned": "default",
                    "uniqueness": "none"
                  },
                  {
                    "name": "nfcCapability",
                    "type": "string",
                    "multiValued": false,
                    "description": "Credential-Container is capable of NFC [Y/N]",
                    "required": false,
                    "caseExact": true,
                    "mutability": "readOnly",
                    "returned": "default",
                    "uniqueness": "none"
                  },
                  {
                    "name": "status",
                    "type": "string",
                    "multiValued": false,
                    "description": "Represents the current status of an User Credential Container",
                    "required": false,
                    "caseExact": true,
                    "mutability": "readOnly",
                    "returned": "default",
                    "uniqueness": "none"
                  }
                ],
                "meta": {
                  "resourceType": "Schema",
                  "location": ""
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/examples/unAuthorizedRequest"
          },
          "404": {
            "$ref": "#/components/examples/urlNotFoundRequest"
          },
          "500": {
            "$ref": "#/components/examples/internalServerErrorRequest"
          }
        }
      }
    },
    "/customer/{customer_id}/schemas/urn:hid:scim:api:ma:1.0:Notification": {
      "get": {
        "summary": "Notification Schema",
        "description": "To retrieve the schema for Notification",
        "operationId": "notificationSchema",
        "tags": [
          "Meta Endpoints"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/customer_id"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Content-Type"
          },
          {
            "$ref": "#/components/parameters/Accept"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "type": "string",
                "default": "application/vnd.assaabloy.ma.credential-management-1.0+json"
              },
              "Location": {
                "type": "string",
                "default": "{BaseUrl}/customer/{customer_id}/schemas/urn:hid:scim:api:ma:1.0:Notification"
              }
            },
            "schema": {
              "$ref": "#/components/schemas/scimSchemaWithSubAttribute"
            },
            "examples": {
              "application/json": {
                "id": "urn:hid:scim:api:ma:1.0:Notification",
                "name": "Notification",
                "description": "Subscriber Notification",
                "attributes": [
                  {
                    "name": "pacsUsers",
                    "type": "complex",
                    "multiValued": false,
                    "description": "User Status Details",
                    "required": false,
                    "subAttributes": [
                      {
                        "name": "id",
                        "type": "string",
                        "multiValued": false,
                        "description": "User ID",
                        "required": false,
                        "caseExact": false,
                        "mutability": "readOnly",
                        "returned": "default",
                        "uniqueness": "none"
                      },
                      {
                        "name": "status",
                        "type": "string",
                        "multiValued": false,
                        "description": "User Status",
                        "required": false,
                        "caseExact": false,
                        "mutability": "readOnly",
                        "returned": "default",
                        "uniqueness": "none"
                      },
                      {
                        "name": "timestamp",
                        "type": "dateTime ",
                        "multiValued": false,
                        "description": "Date and Time on which the User is deleted. Represented in UTC Format",
                        "required": false,
                        "caseExact": true,
                        "mutability": "readOnly",
                        "returned": "default",
                        "uniqueness": "none"
                      }
                    ],
                    "mutability": "readOnly",
                    "returned": "default",
                    "uniqueness": "none"
                  },
                  {
                    "name": "invitations",
                    "type": "complex",
                    "multiValued": false,
                    "description": "Invitation Status Details",
                    "required": false,
                    "subAttributes": [
                      {
                        "name": "id",
                        "type": "string",
                        "multiValued": false,
                        "description": "AAMK Invitation ID",
                        "required": false,
                        "caseExact": false,
                        "mutability": "readOnly",
                        "returned": "default",
                        "uniqueness": "none"
                      },
                      {
                        "name": "status",
                        "type": "string",
                        "multiValued": false,
                        "description": "Invitation Status",
                        "required": false,
                        "caseExact": false,
                        "mutability": "readOnly",
                        "returned": "default",
                        "uniqueness": "none"
                      },
                      {
                        "name": "timestamp",
                        "type": "dateTime ",
                        "multiValued": false,
                        "description": "Date and Time on which the Invitation is registered or cancelled. Represented in UTC Format",
                        "required": false,
                        "caseExact": true,
                        "mutability": "readOnly",
                        "returned": "default",
                        "uniqueness": "none"
                      }
                    ],
                    "mutability": "readOnly",
                    "returned": "default",
                    "uniqueness": "none"
                  },
                  {
                    "name": "credentialContainers",
                    "type": "complex",
                    "multiValued": false,
                    "description": "Credential Container Status Details",
                    "required": false,
                    "subAttributes": [
                      {
                        "name": "id",
                        "type": "string",
                        "multiValued": false,
                        "description": "Credential Container ID",
                        "required": false,
                        "caseExact": false,
                        "mutability": "readOnly",
                        "returned": "default",
                        "uniqueness": "none"
                      },
                      {
                        "name": "status",
                        "type": "string",
                        "multiValued": false,
                        "description": "Credential Container Status",
                        "required": false,
                        "caseExact": false,
                        "mutability": "readOnly",
                        "returned": "default",
                        "uniqueness": "none"
                      },
                      {
                        "name": "timestamp",
                        "type": "dateTime ",
                        "multiValued": false,
                        "description": "Date and Time on which the Credential container is registered. Represented in UTC Format",
                        "required": false,
                        "caseExact": true,
                        "mutability": "readOnly",
                        "returned": "default",
                        "uniqueness": "none"
                      }
                    ],
                    "mutability": "readOnly",
                    "returned": "default",
                    "uniqueness": "none"
                  },
                  {
                    "name": "credentials",
                    "type": "complex",
                    "multiValued": false,
                    "description": "Credential Status Details",
                    "required": false,
                    "subAttributes": [
                      {
                        "name": "id",
                        "type": "string",
                        "multiValued": false,
                        "description": "Credential Id",
                        "required": false,
                        "caseExact": false,
                        "mutability": "readOnly",
                        "returned": "default",
                        "uniqueness": "none"
                      },
                      {
                        "name": "status",
                        "type": "string",
                        "multiValued": false,
                        "description": "Credential Status",
                        "required": false,
                        "caseExact": false,
                        "mutability": "readOnly",
                        "returned": "default",
                        "uniqueness": "none"
                      },
                      {
                        "name": "timestamp",
                        "type": "dateTime ",
                        "multiValued": false,
                        "description": "Date and Time on which the Credential is issued or revoked. Represented in UTC Format",
                        "required": false,
                        "caseExact": true,
                        "mutability": "readOnly",
                        "returned": "default",
                        "uniqueness": "none"
                      }
                    ],
                    "mutability": "readOnly",
                    "returned": "default",
                    "uniqueness": "none"
                  }
                ],
                "meta": {
                  "resourceType": "Schema",
                  "location": ""
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/examples/unAuthorizedRequest"
          },
          "404": {
            "$ref": "#/components/examples/urlNotFoundRequest"
          },
          "500": {
            "$ref": "#/components/examples/internalServerErrorRequest"
          }
        }
      }
    },
    "/customer/{customer_id}/schemas/urn:hid:scim:api:ma:1.0:PartNumber": {
      "get": {
        "summary": "Part Number Schema",
        "description": "To retrieve the schema for PartNumber",
        "operationId": "partNumberSchema",
        "tags": [
          "Meta Endpoints"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/customer_id"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Content-Type"
          },
          {
            "$ref": "#/components/parameters/Accept"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "type": "string",
                "default": "application/vnd.assaabloy.ma.credential-management-1.0+json"
              },
              "Location": {
                "type": "string",
                "default": "{BaseUrl}/customer/{customer_id}/schemas/urn:hid:scim:api:ma:1.0:PartNumber"
              }
            },
            "schema": {
              "$ref": "#/components/schemas/scimSchemaWithSubAttribute"
            },
            "examples": {
              "application/json": {
                "id": "urn:hid:scim:api:ma:1.0:PartNumber",
                "name": "Part Number",
                "description": "Mobile Access Part Number",
                "attributes": [
                  {
                    "name": "id",
                    "type": "integer",
                    "multiValued": false,
                    "description": "Part number unique ID ",
                    "required": true,
                    "caseExact": true,
                    "mutability": "readOnly",
                    "returned": "default",
                    "uniqueness": "global"
                  },
                  {
                    "name": "partNumber",
                    "type": "string",
                    "multiValued": false,
                    "description": "Credentials Binded to part number",
                    "required": false,
                    "caseExact": true,
                    "mutability": "readOnly",
                    "returned": "default",
                    "uniqueness": "none"
                  },
                  {
                    "name": "friendlyName",
                    "type": "string",
                    "multiValued": false,
                    "description": "Friendly Name associated to  part number",
                    "required": false,
                    "caseExact": true,
                    "mutability": "readOnly",
                    "returned": "default",
                    "uniqueness": "none"
                  },
                  {
                    "name": "description",
                    "type": "string",
                    "multiValued": false,
                    "description": "Description of Part number",
                    "required": false,
                    "caseExact": true,
                    "mutability": "readOnly",
                    "returned": "default",
                    "uniqueness": "none"
                  },
                  {
                    "name": "availableQty",
                    "type": "integer",
                    "multiValued": false,
                    "description": "Available Credential  for that partNumber",
                    "required": false,
                    "caseExact": true,
                    "mutability": "readOnly",
                    "returned": "default",
                    "uniqueness": "none"
                  },
                  {
                    "name": "badgeType",
                    "type": "string",
                    "multiValued": false,
                    "description": "Badge Type of the Part Number",
                    "required": false,
                    "caseExact": true,
                    "mutability": "readOnly",
                    "returned": "default",
                    "uniqueness": "none"
                  },
                  {
                    "name": "programmingData",
                    "type": "complex",
                    "multiValued": true,
                    "description": "Programming Information of Part Number belonging to Fastrack",
                    "required": false,
                    "caseExact": true,
                    "mutability": "readOnly",
                    "returned": "default",
                    "uniqueness": "none",
                    "subAttributes": [
                      {
                        "name": "FORMAT_NUMBER",
                        "type": "string",
                        "multiValued": false,
                        "description": "Format Number of the Part Number Group",
                        "required": false,
                        "caseExact": true,
                        "mutability": "readOnly",
                        "returned": "default",
                        "uniqueness": "none"
                      }
                    ]
                  }
                ],
                "meta": {
                  "resourceType": "Schema",
                  "location": ""
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/examples/unAuthorizedRequest"
          },
          "404": {
            "$ref": "#/components/examples/urlNotFoundRequest"
          },
          "500": {
            "$ref": "#/components/examples/internalServerErrorRequest"
          }
        }
      }
    },
    "/customer/{customer_id}/schemas/urn:hid:scim:api:ma:1.0:CallbackRegistration": {
      "get": {
        "summary": "Callback Registration Schema",
        "description": "To retrieve the schema for Callback Registration",
        "operationId": "callbackRegistrationSchema",
        "tags": [
          "Meta Endpoints"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/customer_id"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Content-Type"
          },
          {
            "$ref": "#/components/parameters/Accept"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "type": "string",
                "default": "application/vnd.assaabloy.ma.credential-management-1.0+json"
              },
              "Location": {
                "type": "string",
                "default": "{BaseUrl}/customer/{customer_id}/schemas/urn:hid:scim:api:ma:1.0:CallbackRegistration"
              }
            },
            "schema": {
              "$ref": "#/components/schemas/scimSchema"
            },
            "examples": {
              "application/json": {
                "id": "urn:hid:scim:api:ma:1.0:CallbackRegistration",
                "name": "Callback Registration",
                "description": "Callback Registration",
                "attributes": [
                  {
                    "name": "callbackUrl",
                    "type": "string",
                    "multiValued": false,
                    "description": "Callback Registration URL",
                    "required": true,
                    "caseExact": false,
                    "mutability": "readWrite",
                    "returned": "default",
                    "uniqueness": "none"
                  }
                ],
                "meta": {
                  "resourceType": "Schema",
                  "location": ""
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/examples/unAuthorizedRequest"
          },
          "404": {
            "$ref": "#/components/examples/urlNotFoundRequest"
          },
          "500": {
            "$ref": "#/components/examples/internalServerErrorRequest"
          }
        }
      }
    },
    "/customer/{customer_id}/schemas/urn:hid:scim:api:ma:1.1:SDKVersion": {
      "get": {
        "summary": "SDK Version Schema",
        "description": "To retrieve the schema for SDK Version",
        "operationId": "sDKVersionSchema",
        "tags": [
          "Meta Endpoints"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/customer_id"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Content-Type"
          },
          {
            "$ref": "#/components/parameters/Accept"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "type": "string",
                "default": "application/vnd.assaabloy.ma.credential-management-1.0+json"
              },
              "Location": {
                "type": "string",
                "default": "/customer/{customer_id}/schemas/urn:hid:scim:api:ma:1.1:SDKVersion"
              }
            },
            "schema": {
              "$ref": "#/components/schemas/scimSchema"
            },
            "examples": {
              "application/json": {
                "id": "urn:hid:scim:api:ma:1.0:SDKVersion",
                "name": "SDK Version",
                "description": "version of the SDK",
                "attributes": [
                  {
                    "name": "version",
                    "type": "string",
                    "multiValued": false,
                    "description": "SDK Version",
                    "required": false,
                    "caseExact": false,
                    "mutability": "readOnly",
                    "returned": "default",
                    "uniqueness": "none"
                  }
                ],
                "meta": {
                  "resourceType": "Schema",
                  "location": ""
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/examples/unAuthorizedRequest"
          },
          "404": {
            "$ref": "#/components/examples/urlNotFoundRequest"
          },
          "500": {
            "$ref": "#/components/examples/internalServerErrorRequest"
          }
        }
      }
    },
    "/customer/{customer_id}/schemas/resourceTypes": {
      "get": {
        "summary": "Resource Types Schema",
        "description": "To retrieve the schema for Resource Types",
        "operationId": "resourceTypeSchema",
        "tags": [
          "Meta Endpoints"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/customer_id"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Content-Type"
          },
          {
            "$ref": "#/components/parameters/Accept"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "type": "string",
                "default": "application/vnd.assaabloy.ma.credential-management-1.0+json"
              },
              "Location": {
                "type": "string",
                "default": "{BaseUrl}/customer/{customer_id}/schemas/resourceTypes"
              }
            },
            "schema": {
              "$ref": "#/components/schemas/resourceTypeSchema"
            },
            "examples": {
              "application/json": {
                "totalResults": 8,
                "itemsPerPage": 8,
                "startIndex": 1,
                "schemas": [
                  "urn:ietf:params:scim:api:messages:2.0:ListResponse"
                ],
                "Resources": [
                  {
                    "schemas": [
                      "urn:ietf:params:scim:schemas:core:2.0:ResourceType"
                    ],
                    "id": "PACSUser",
                    "name": "PACSUser",
                    "endpoint": "/users",
                    "description": "Mobile Access Users",
                    "schema": "urn:ietf:params:scim:schemas:core:2.0:User",
                    "schemaExtensions": [
                      {
                        "schema": "urn:hid:scim:api:ma:1.0:UserAction",
                        "required": false
                      }
                    ],
                    "meta": {
                      "location": "",
                      "resourceType": "ResourceType"
                    }
                  },
                  {
                    "schemas": [
                      "urn:ietf:params:scim:schemas:core:2.0:ResourceType"
                    ],
                    "id": "UserInvitation",
                    "name": "UserInvitation",
                    "endpoint": "/invitation",
                    "description": "Mobile Access User Invitation",
                    "schema": "urn:hid:scim:api:ma:1.0:UserInvitation",
                    "schemaExtensions": [
                      {
                        "schema": "urn:hid:scim:api:ma:1.0:UserAction",
                        "required": false
                      }
                    ],
                    "meta": {
                      "location": "",
                      "resourceType": "ResourceType"
                    }
                  },
                  {
                    "schemas": [
                      "urn:ietf:params:scim:schemas:core:2.0:ResourceType"
                    ],
                    "id": "PartNumber",
                    "name": "PartNumber",
                    "endpoint": "/part-number",
                    "description": "Part Number",
                    "schema": "urn:hid:scim:api:ma:1.0:PartNumber",
                    "meta": {
                      "location": "",
                      "resourceType": "ResourceType"
                    }
                  },
                  {
                    "schemas": [
                      "urn:ietf:params:scim:schemas:core:2.0:ResourceType"
                    ],
                    "id": "UserCredential",
                    "name": "UserCredential",
                    "endpoint": "/credential",
                    "description": "Mobile Access User Credential",
                    "schema": "urn:hid:scim:api:ma:1.0:Credential",
                    "schemaExtensions": [
                      {
                        "schema": "urn:hid:scim:api:ma:1.0:UserAction",
                        "required": false
                      }
                    ],
                    "meta": {
                      "location": "",
                      "resourceType": "ResourceType"
                    }
                  },
                  {
                    "schemas": [
                      "urn:ietf:params:scim:schemas:core:2.0:ResourceType"
                    ],
                    "id": "UserCredentialContainer",
                    "name": "UserCredentialContainer",
                    "endpoint": "/credential-container",
                    "description": "Mobile Access User Credential Container",
                    "schema": "urn:hid:scim:api:ma:1.0:CredentialContainer",
                    "meta": {
                      "location": "",
                      "resourceType": "ResourceType"
                    }
                  },
                  {
                    "schemas": ["urn:ietf:params:scim:schemas:core:2.0:ResourceType"],
                    "id": "Notification",
                    "name": "Notification",
                    "description": "Callback Service Notification",
                    "schema": "urn:hid:scim:api:ma:1.0:Notification",
                    "meta": {

                      "resourceType": "ResourceType"
                    }
                  },
                  {
                    "schemas": ["urn:ietf:params:scim:schemas:core:2.0:ResourceType"],
                    "id": "SDK Version",
                    "name": "SDK Version",
                    "endpoint": "/sdk-version",
                    "description": "Version of the SDK",
                    "schema": "urn:hid:scim:api:ma:1.0:SDKVersion",
                    "meta": {
                      "location": "",
                      "resourceType": "ResourceType"
                    }
                  },
                  {
                    "schemas": ["urn:ietf:params:scim:schemas:core:2.0:ResourceType"],
                    "id": "CallbackRegistration",
                    "name": "CallbackRegistration",
                    "endpoint": "/callback-registration",
                    "description": "Mobile Access Callback Registration",
                    "schema": "urn:hid:scim:api:ma:1.0:CallbackRegistration",
                    "meta": {
                      "location": "",
                      "resourceType": "ResourceType"
                    }
                  }
                ]
              }
            }
          },
          "401": {
            "$ref": "#/components/examples/unAuthorizedRequest"
          },
          "404": {
            "$ref": "#/components/examples/urlNotFoundRequest"
          },
          "500": {
            "$ref": "#/components/examples/internalServerErrorRequest"
          }
        }
      }
    },
    "/customer/{customer_id}/schemas/serviceProviderConfig": {
      "get": {
        "summary": "Service Provider Configuration Schema",
        "description": "To retrieve the schema for Service Provider Configuration",
        "operationId": "serviceProviderConfigSchema",
        "tags": [
          "Meta Endpoints"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/customer_id"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Content-Type"
          },
          {
            "$ref": "#/components/parameters/Accept"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "type": "string",
                "default": "application/vnd.assaabloy.ma.credential-management-1.0+json"
              },
              "Location": {
                "type": "string",
                "default": "{BaseUrl}/customer/{customer_id}/schemas/serviceProviderConfig"
              }
            },
            "schema": {
              "$ref": "#/components/schemas/serviceProviderConfigSchema"
            },
            "examples": {
              "application/json": {
                "schemas": [
                  "urn:ietf:params:scim:schemas:core:2.0:ServiceProviderConfig"
                ],
                "documentationUri": "",
                "patch": {
                  "supported": false
                },
                "bulk": {
                  "supported": false
                },
                "filter": {
                  "supported": true,
                  "maxResults": 25
                },
                "changePassword": {
                  "supported": false
                },
                "sort": {
                  "supported": true
                },
                "etag": {
                  "supported": false
                },
                "authenticationSchemes": [
                  {
                    "name": "OAuth Bearer Token",
                    "description": "Authentication Scheme using the OAuth Bearer Token Standard",
                    "type": "oauthbearertoken",
                    "primary": true
                  }
                ],
                "meta": {
                  "location": "",
                  "resourceType": "ServiceProviderConfig",
                  "created": "2015-08-23T04:56:22Z",
                  "lastModified": "2015-11-19T04:42:34Z"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/examples/unAuthorizedRequest"
          },
          "404": {
            "$ref": "#/components/examples/urlNotFoundRequest"
          },
          "500": {
            "$ref": "#/components/examples/internalServerErrorRequest"
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "Authorization": {
        "name": "Authorization",
        "in": "header",
        "description": "Authorization Token",
        "required": true,
        "type": "string",
        "x-example": "Bearer <TOKEN>"
      },
      "Content-Type": {
        "name": "Content-Type",
        "in": "header",
        "description": "Content-Type header describing the incoming request content type",
        "required": true,
        "type": "string",
        "x-example": "application/vnd.assaabloy.ma.credential-management-1.0+json"
      },
      "Accept": {
        "name": "Accept",
        "in": "header",
        "description": "Accept header",
        "required": false,
        "type": "string",
        "x-example": "application/vnd.assaabloy.ma.credential-management-1.0+json"
      },
      "customer_id": {
        "name": "customer_id",
        "in": "path",
        "description": "Organization Id ",
        "required": true,
        "type": "number"
      },
      "user_id": {
        "name": "user_id",
        "in": "path",
        "description": "Unique Id of the User ",
        "required": true,
        "type": "number"
      },
      "invitation_id": {
        "name": "invitation_id",
        "in": "path",
        "description": "Invitation Id of the User ",
        "required": true,
        "type": "number"
      },
      "credential_id": {
        "name": "credential_id",
        "in": "path",
        "description": "Credential Id ",
        "required": true,
        "type": "number"
      },
      "credential_container_id": {
        "name": "credential_container_id",
        "in": "path",
        "description": "credential Container Id ",
        "required": true,
        "type": "number"
      },
      "part_number_id": {
        "name": "part_number_id",
        "in": "path",
        "description": "Part Number Id ",
        "required": true,
        "type": "string"
      },
      "callback_registration_id": {
        "name": "callback_registration_id",
        "in": "path",
        "description": "Unique identifier is provided by HID Global  ",
        "required": true,
        "type": "string"
      },
      "userCreateRequestBody": {
        "name": "userCreateRequestBody",
        "in": "body",
        "required": true,
        "description": "Creation of End User associated to an organization. User Action schema are optional .It can be used when we need to create invitation and/or auto assign credentials along with sending email in one go during User creation.",
        "schema": {
          "$ref": "#/components/schemas/userCreateRequest"
        },
        "examples": {
          "application/json": {
            "schemas": [
              "urn:hid:scim:api:ma:1.0:UserAction",
              "urn:ietf:params:scim:schemas:core:2.0:User"
            ],
            "externalId": "12",
            "name": {
              "familyName": "Barbara",
              "givenName": "Jensen"
            },
            "emails": [
              {
                "value": "Jensen@example.com"
              }
            ],
            "urn:hid:scim:api:ma:1.0:UserAction": {
              "createInvitationCode": "Y",
              "sendInvitationEmail": "N",
              "assignCredential": "Y",
              "partNumber": "",
              "credential": ""
            },
            "meta": {
              "resourceType": "PACSUser"
            }
          }
        }
      },
      "userUpdateRequestBody": {
        "name": "userUpdateRequestBody",
        "in": "body",
        "required": true,
        "description": "Consumer can search for Part Numbers based on the below provided attributes only. All the provided attributes are optional.  Attribute Names should be in standard attribute notation ",
        "schema": {
          "$ref": "#/components/schemas/userUpdateRequest"
        }
      },
      "userSearchRequestBody": {
        "name": "userSearchRequestBody",
        "in": "body",
        "required": true,
        "description": "Consumer can search for Invitations based on the below provided attributes only. All the provided attributes are optional.  Attribute Names should be in standard attribute notation ",
        "schema": {
          "$ref": "#/components/schemas/userSearchRequest"
        },
        "examples": {
          "application/json": {
            "schemas": [
              "urn:ietf:params:scim:api:messages:2.0:SearchRequest"
            ],
            "attributes": [
              "name.familyName",
              "name.givenName",
              "urn:ietf:params:scim:schemas:core:2.0:User:emails"
            ],
            "filter": "emails.value eq \"Jensen@example.com\"",
            "sortBy": "name.familyName",
            "sortOrder": "descending",
            "startIndex": 1,
            "count": 100
          }
        }
      },
      "invitationCreateRequestBody": {
        "name": "invitationCreateRequestBody",
        "in": "body",
        "required": true,
        "description": "Create invitation for enrolled PACS user",
        "schema": {
          "$ref": "#/components/schemas/invitationCreateRequest"
        }
      },
      "invitationSearchRequestBody": {
        "name": "invitationSearchRequestBody",
        "in": "body",
        "required": true,
        "description": "Consumer can search for Invitations based on the below provided attributes only. All the provided attributes are optional.  Attribute Names should be in standard attribute notation ",
        "schema": {
          "$ref": "#/components/schemas/invitationSearchRequest"
        }
      },
      "partNumberSearchRequestBody": {
        "name": "partNumberSearchRequestBody",
        "in": "body",
        "required": true,
        "description": "Consumer can search for Part Numbers based on the below provided attributes only. All the provided attributes are optional.  Attribute Names should be in standard attribute notation ",
        "schema": {
          "$ref": "#/components/schemas/partNumberSearchRequest"
        }
      },
      "credentialSearchRequestBody": {
        "name": "credentialSearchRequestBody",
        "in": "body",
        "required": true,
        "description": "Consumer can search for credentials based on the below provided attributes only. All the provided attributes are optional. Attribute Names should be in standard attribute notation ",
        "schema": {
          "$ref": "#/components/schemas/partNumberSearchRequest"
        }
      },
      "credentialCreateRequestBody": {
        "name": "credentialCreateRequestBody",
        "in": "body",
        "required": true,
        "description": "Issue credential for credential container",
        "schema": {
          "$ref": "#/components/schemas/credentialCreateRequest"
        }
      },
      "callbackRequestBody": {
        "name": "callbackRequestBody",
        "in": "body",
        "required": true,
        "description": "",
        "schema": {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "definitions": {},
          "id": "http://example.com/example.json",
          "required": [
            "schemas",
            "callbackUrl"
          ],
          "properties": {
            "schemas": {
              "items": {
                "type": "string",
                "required": true,
                "description": "Default Schema for Callback is \"urn:hid:scim:api:ma:1.0:CallbackRegistration\"."
              },
              "type": "array",
              "example": [
                "urn:hid:scim:api:ma:1.0:CallbackRegistration"
              ]
            },
            "meta": {
              "type": "object",
              "properties": {
                "resourceType": {
                  "type": "string",
                  "description": "Type of resource. Default resurce type is \"CallbackRegistration\"",
                  "example": "\"CallbackRegistration\""
                }
              }
            },
            "urn:hid:scim:api:ma:1.0:CallbackRegistration": {
              "$ref": "#/components/schemas/urn:hid:scim:api:ma:1.0:CallbackRegistration"
            }
          },
          "type": "object"
        }
      }
    },
    "schemas": {
      "meta": {
        "type": "object",
        "properties": {
          "location": {
            "type": "string"
          },
          "lastModified": {
            "type": "string",
            "format": "date-time",
            "description": "Last Modified Date Time of Part Number in UTC"
          },
          "resourceType": {
            "type": "string"
          }
        }
      },
      "listResources": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "$ref": "#/components/schemas/meta"
          }
        }
      },
      "listResponseDetails": {
        "type": "object",
        "properties": {
          "schemas": {
            "items": {
              "type": "string",
              "default": "urn:ietf:params:scim:api:messages:2.0:ListResponse"
            },
            "type": "array"
          },
          "totalResults": {
            "type": "number",
            "example": 60
          },
          "startIndex": {
            "type": "number",
            "example": 0
          },
          "itemsPerPage": {
            "type": "number",
            "example": 25
          },
          "Resources": {
            "$ref": "#/components/schemas/listResources"
          }
        }
      },
      "partNumberSearchResources": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "meta": {
              "$ref": "#/components/schemas/partNumberMeta"
            },
            "partNumber": {
              "type": "string",
              "description": "HID defined Part number",
              "example": "CRD633ZZ-00237"
            },
            "description": {
              "type": "string",
              "description": "Description of Part number",
              "example": "Desc"
            },
            "availableQty": {
              "type": "number",
              "description": "Total available Credentials that are not bounded yet",
              "example": 200
            }
          }
        }
      },
      "userSearchResponse": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "definitions": {},
        "id": "http://example.com/example.json",
        "type": "object",
        "properties": {
          "schemas": {
            "items": {
              "type": "string",
              "description": "Default schema of all search apis is urn:ietf:params:scim:api:messages:2.0:SearchRequest",
              "default": "urn:ietf:params:scim:api:messages:2.0:ListResponse"
            },
            "type": "array"
          },
          "totalResults": {
            "type": "number",
            "example": 1
          },
          "startIndex": {
            "type": "number",
            "example": 1
          },
          "itemsPerPage": {
            "type": "number",
            "example": 1
          },
          "Resources": {
            "$ref": "#/components/schemas/userSearchResources"
          }
        }
      },
      "usersListResponse": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "definitions": {},
        "id": "http://example.com/example.json",
        "properties": {
          "schemas": {
            "items": {
              "type": "string",
              "description": "Default Schema for List Apis is urn:ietf:params:scim:api:messages:2.0:ListResponse",
              "default": "urn:ietf:params:scim:api:messages:2.0:ListResponse"
            },
            "type": "array"
          },
          "totalResults": {
            "type": "number",
            "description": "Total number of Users",
            "example": "150"
          },
          "startIndex": {
            "type": "number",
            "description": "Start Index",
            "example": "1"
          },
          "itemsPerPage": {
            "type": "number",
            "description": "Number of Resources displayed per page(Max 25 items only)",
            "example": "10"
          },
          "Resources": {
            "type": "array",
            "description": "Location of the resource to get more details of specific user",
            "items": {
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/userMeta"
                }
              }
            }
          }
        },
        "type": "object"
      },
      "userCreateRequest": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "definitions": {},
        "id": "http://example.com/example.json",
        "required": [
          "schemas",
           "name",
          "emails"
        ],
        "properties": {
          "schemas": {
            "items": {
              "type": "string",
              "required": true,
              "description": "Default Schema for User is \"urn:ietf:params:scim:schemas:core:2.0:User\".\n\n Optionally \"urn:hid:scim:api:ma:1.0:UserAction\"  Schema can be used if any User actions like invitation creation,credential auto assignment or sending email functionality needs to be associated during user creation."
            },
            "type": "array",
            "example": [
              "urn:ietf:params:scim:schemas:core:2.0:User",
              "urn:hid:scim:api:ma:1.0:UserAction"
            ]
          },
          "externalId": {
            "type": "string",
            "description": "External Id of a User",
            "example": "12"
          },
          "name": {
            "type": "object",
            "properties": {
              "familyName": {
                "type": "string",
                "example": "John"
              },
              "givenName": {
                "type": "string",
                "example": "Snow"
              }
            }
          },
          "emails": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string",
                  "example": "john@gmail.com"
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "properties": {
              "resourceType": {
                "type": "string",
                "example": "\"PACSUser\""
              }
            }
          },
          "urn:hid:scim:api:ma:1.0:UserAction": {
            "$ref": "#/components/schemas/urn:hid:scim:api:ma:1.0:UserAction"
          }
        },
        "type": "object"
      },
      "userUpdateRequest": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "definitions": {},
        "id": "http://example.com/example.json",
        "properties": {
          "schemas": {
            "items": {
              "type": "string",
              "required": true,
              "description": "Default Schema Used here is urn:ietf:params:scim:schemas:core:2.0:User",
              "enum": [
                "urn:ietf:params:scim:schemas:core:2.0:User"
              ]
            },
            "type": "array",
            "example": [
              "urn:ietf:params:scim:schemas:core:2.0:User"
            ]
          },
          "externalId": {
            "type": "string",
            "description": "External Id of a User",
            "example": "12"
          },
          "name": {
            "type": "object",
            "properties": {
              "familyName": {
                "type": "string",
                "example": "John"
              },
              "givenName": {
                "type": "string",
                "example": "Snow"
              }
            }
          },
          "emails": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string",
                  "example": "john@gmail.com"
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "properties": {
              "resourceType": {
                "type": "string",
                "example": "\"PACSUser\""
              }
            }
          }
        },
        "type": "object"
      },
      "userSearchRequest": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "definitions": {},
        "id": "http://example.com/example.json",
        "properties": {
          "schemas": {
            "items": {
              "type": "string",
              "description": "Default schema of all search apis is urn:ietf:params:scim:api:messages:2.0:SearchRequest",
              "default": "urn:ietf:params:scim:api:messages:2.0:SearchRequest"
            },
            "type": "array"
          },
          "count": {
            "type": "number",
            "example": 100
          },
          "startIndex": {
            "type": "number",
            "example": 1
          },
          "sortBy": {
            "type": "string",
            "description": "By default it uses lastModifiedDate for sorting if none of the attributes are given",
            "enum": [
              "name.familyName"
            ],
            "example": "name.familyName"
          },
          "sortOrder": {
            "type": "descending",
            "example": "descending"
          },
          "attributes": {
            "type": "array",
            "description": "List of Attributes details that can be searched upon are id invitationCode or status",
            "items": {
              "type": "string",
              "enum": [
                "name.familyName",
                "name.givenName",
                "urn:ietf:params:scim:schemas:core:2.0:User:emails"
              ],
              "example": [
                "name.familyName",
                "name.givenName",
                "urn:ietf:params:scim:schemas:core:2.0:User:emails"
              ]
            }
          },
          "filter": {
            "type": "string",
            "enum": [
              "id",
              "invitationCode",
              "externalId",
              "meta.lastModified",
              "status"
            ],
            "example": "emails.value eq \"Jensen@example.com\""
          }
        },
        "type": "object"
      },
      "userCreateResponse": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "definitions": {},
        "id": "http://example.com/example.json",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/userInvitationCredentialResponse"
          }
        ]
      },
      "userUpdateResponse": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "definitions": {},
        "id": "http://example.com/example.json",
        "allOf": [
          {
            "$ref": "#/components/schemas/urn:ietf:params:scim:schemas:core:2.0:User"
          },
          {
            "type": "object",
            "properties": {
              "meta": {
                "$ref": "#/components/schemas/userMeta"
              }
            }
          }
        ]
      },
      "userSearchResources": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "meta": {
              "$ref": "#/components/schemas/userMeta"
            },
            "name": {
              "type": "object",
              "properties": {
                "familyName": {
                  "type": "string",
                  "example": "John"
                },
                "givenName": {
                  "type": "string",
                  "example": "Snow"
                }
              }
            },
            "emails": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "string",
                    "example": "john@gmail.com"
                  }
                }
              }
            }
          }
        }
      },
      "userGetResponse": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "definitions": {},
        "id": "http://example.com/example.json",
        "type": "object",
        "properties": {
          "schemas": {
            "items": {
              "type": "string",
              "description": "Mandatory Schema Used here is urn:ietf:params:scim:schemas:core:2.0:User,Rest are optional",
              "enum": [
                "urn:ietf:params:scim:schemas:core:2.0:User",
                "urn:hid:scim:api:ma:1.0:UserInvitation",
                "urn:hid:scim:api:ma:1.0:Credential"
              ]
            },
            "type": "array",
            "example": [
              "urn:ietf:params:scim:schemas:core:2.0:User",
              "urn:hid:scim:api:ma:1.0:UserInvitation",
              "urn:hid:scim:api:ma:1.0:Credential"
            ]
          },
          "id": {
            "type": "number",
            "description": "Unique Id of the User",
            "example": 12345
          },
          "externalId": {
            "type": "string",
            "description": "External Id of a User",
            "example": "12"
          },
          "name": {
            "type": "object",
            "properties": {
              "familyName": {
                "type": "string",
                "example": "John"
              },
              "givenName": {
                "type": "string",
                "example": "Snow"
              }
            }
          },
          "emails": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "value"
              ],
              "properties": {
                "value": {
                  "type": "string",
                  "example": "john@gmail.com"
                }
              }
            }
          },
          "status": {
            "type": "string",
            "description" : "Status of the User.It can be one of \n\n | **Status**  | **Description** |\n|---------------|--------------|\n| Active | Active Mobile End User  |\n|  INACTIVE_INITIATED | Deleting User \n\n",
            "example": "ACTIVE"
          },
          "urn:hid:scim:api:ma:1.0:UserInvitation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/urn:hid:scim:api:ma:1.0:UserInvitation"
            }
          },
          "urn:hid:scim:api:ma:1.0:CredentialContainer": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/urn:hid:scim:api:ma:1.0:CredentialContainer"
                },
                {
                  "type": "object",
                  "properties": {
                    "urn:hid:scim:api:ma:1.0:Credential": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/urn:hid:scim:api:ma:1.0:Credential"
                      }
                    }
                  }
                }
              ]
            }
          },
          "meta": {
            "$ref": "#/components/schemas/userMeta"
          }
        }
      },
      "userActionWithOutInvitation": {
        "type": "object",
        "properties": {
          "sendInvitationEmail": {
            "type": "string",
            "enum": [
              "Y",
              "N"
            ],
            "description": "Send an email once the Invitation code is generated successfully.Attribute Value should be either Y/y or N/n."
          },
          "assignCredential": {
            "type": "string",
            "enum": [
              "Y",
              "N"
            ],
            "description": "Assign next available credential once the user consumes Invitation Code. This action is applicable if and only if the createInvitationCode is requested in the same request.Attribute Value should be either Y/y or N/n."
          },
          "partNumber": {
            "type": "string",
            "description": "Part number that needs to be assigned.If its empty then default part number of the organization will be used",
            "example": ""
          },
          "credential": {
            "type": "string",
            "description": "Unique Credential that needs to be assigned to a Credential Container.",
            "example": ""
          }
        }
      },
      "issueCredential": {
        "type": "object",
        "properties": {
          "partNumber": {
            "type": "string",
            "description": "Part number that needs to be assigned.If its empty then default part number of the organization will be used",
            "example": "IOD-MB-95029"
          },
          "credential": {
            "type": "string",
            "description": "Unique Credential that needs to be assigned to a Credential Container.",
            "example": "569595"
          }
        }
      },
      "credentialContainerListResponse": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "definitions": {},
        "id": "http://example.com/example.json",
        "properties": {
          "schemas": {
            "items": {
              "type": "string",
              "description": "Default Schema for List Apis is urn:ietf:params:scim:api:messages:2.0:ListResponse",
              "default": "urn:ietf:params:scim:api:messages:2.0:ListResponse"
            },
            "type": "array"
          },
          "totalResults": {
            "type": "number",
            "description": "Total number of Credential Containers",
            "example": "1"
          },
          "startIndex": {
            "type": "number",
            "description": "start Index",
            "example": "1"
          },
          "itemsPerPage": {
            "type": "number",
            "description": "Number of Resources displayed per page(Max 25 items only)",
            "example": "1"
          },
          "Resources": {
            "type": "array",
            "description": "Location of the resource to get more details of specific credential-container associated to a user",
            "items": {
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/credentialContainerMeta"
                }
              }
            }
          }
        },
        "type": "object"
      },
      "credentialListResponse": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "definitions": {},
        "id": "http://example.com/example.json",
        "properties": {
          "schemas": {
            "items": {
              "type": "string",
              "description": "Default Schema for List Apis is urn:ietf:params:scim:api:messages:2.0:ListResponse",
              "default": "urn:ietf:params:scim:api:messages:2.0:ListResponse"
            },
            "type": "array"
          },
          "totalResults": {
            "type": "number",
            "description": "Total number of Credentials",
            "example": "1"
          },
          "startIndex": {
            "type": "number",
            "description": "start Index",
            "example": "1"
          },
          "itemsPerPage": {
            "type": "number",
            "description": "Number of Resources displayed per page(Max 25 items only)",
            "example": "1"
          },
          "Resources": {
            "type": "array",
            "description": "Location of the resource to get more details of specific credential associated to a user",
            "items": {
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/credentialMeta"
                }
              }
            }
          }
        },
        "type": "object"
      },
      "credentialContainerGetResponse": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "definitions": {},
        "id": "http://example.com/example.json",
        "type": "object",
        "properties": {
          "schemas": {
            "items": {
              "type": "string",
              "description": "Mandatory schemas supported",
              "enum": [
                "urn:hid:scim:api:ma:1.0:CredentialContainer",
                "urn:hid:scim:api:ma:1.0:Credential"
              ]
            },
            "type": "array",
            "example": [
              "urn:hid:scim:api:ma:1.0:CredentialContainer",
              "urn:hid:scim:api:ma:1.0:Credential"
            ]
          },
          "urn:hid:scim:api:ma:1.0:CredentialContainer": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/urn:hid:scim:api:ma:1.0:CredentialContainer"
                },
                {
                  "type": "object",
                  "properties": {
                    "urn:hid:scim:api:ma:1.0:Credential": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/urn:hid:scim:api:ma:1.0:Credential"
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/credentialContainerMeta"
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "credentialGetResponse": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "definitions": {},
        "id": "http://example.com/example.json",
        "type": "object",
        "properties": {
          "schemas": {
            "items": {
              "type": "string",
              "description": "Mandatory schemas supported",
              "enum": [
                "urn:hid:scim:api:ma:1.0:Credential"
              ]
            },
            "type": "array"
          },
          "urn:hid:scim:api:ma:1.0:Credential": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/urn:hid:scim:api:ma:1.0:Credential"
                },
                {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/credentialMeta"
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "credentialCreateRequest": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "definitions": {},
        "id": "http://example.com/example.json",
        "required": [
          "schemas"
        ],
        "properties": {
          "schemas": {
            "items": {
              "type": "string",
              "required": true,
              "description": "Default Schema for Invitation is \"urn:hid:scim:api:ma:1.0:UserAction\"."
            },
            "type": "array",
            "example": [
              "urn:hid:scim:api:ma:1.0:UserAction"
            ]
          },
          "meta": {
            "type": "object",
            "properties": {
              "resourceType": {
                "type": "string",
                "example": "UserCredential"
              }
            }
          },
          "urn:hid:scim:api:ma:1.0:UserAction": {
            "$ref": "#/components/schemas/issueCredential"
          }
        },
        "type": "object"
      },
      "credentialSearchRequest": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "definitions": {},
        "id": "http://example.com/example.json",
        "properties": {
          "schemas": {
            "items": {
              "type": "string",
              "description": "Default schema of all search apis is urn:ietf:params:scim:api:messages:2.0:SearchRequest",
              "default": "urn:ietf:params:scim:api:messages:2.0:SearchRequest"
            },
            "type": "array"
          },
          "count": {
            "type": "number",
            "example": 10
          },
          "startIndex": {
            "type": "number",
            "example": 1
          },
          "sortBy": {
            "type": "string",
            "description": "By default it uses lastModifiedDate for sorting if none of the attributes are given",
            "enum": [
              "status"
            ],
            "example": "status"
          },
          "sortOrder": {
            "type": "descending",
            "example": "descending"
          },
          "attributes": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "partNumber"
              ],
              "example": [
                "partNumber"
              ]
            }
          },
          "filter": {
            "type": "string",
            "example": "status eq \"UNBOUND\""
          }
        },
        "type": "object"
      },
      "credentialSearchResponse": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "definitions": {},
        "id": "http://example.com/example.json",
        "type": "object",
        "properties": {
          "schemas": {
            "items": {
              "type": "string",
              "description": "Default schema of all search apis is urn:ietf:params:scim:api:messages:2.0:SearchRequest",
              "default": "urn:ietf:params:scim:api:messages:2.0:ListResponse"
            },
            "type": "array"
          },
          "totalResults": {
            "type": "number",
            "example": 1
          },
          "startIndex": {
            "type": "number",
            "example": 1
          },
          "itemsPerPage": {
            "type": "number",
            "example": 1
          },
          "Resources": {
            "$ref": "#/components/schemas/credentialSearchResources"
          }
        }
      },
      "credentialSearchResources": {
        "type": "object",
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/credentialMeta"
          },
          "partNumber": {
            "type": "string",
            "example": "CRD633ZZ-00237"
          }
        }
      },
      "credentialCreateResponse": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "definitions": {},
        "id": "http://example.com/example.json",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "meta": {
                "$ref": "#/components/schemas/credentialMeta"
              },
              "schemas": {
                "items": {
                  "type": "string",
                  "required": true,
                  "description": ""
                },
                "type": "array",
                "example": [
                  "urn:hid:scim:api:ma:1.0:Credential"
                ]
              }
            }
          },
          {
            "$ref": "#/components/schemas/urn:hid:scim:api:ma:1.0:Credential"
          }
        ]
      },
      "invitationCreateRequest": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "definitions": {},
        "id": "http://example.com/example.json",
        "required": [
          "schemas"
        ],
        "properties": {
          "schemas": {
            "items": {
              "type": "string",
              "required": true,
              "description": "Default Schema for Invitation is \"urn:hid:scim:api:ma:1.0:UserAction\"."
            },
            "type": "array",
            "example": [
              "urn:hid:scim:api:ma:1.0:UserAction"
            ]
          },
          "meta": {
            "type": "object",
            "properties": {
              "resourceType": {
                "type": "string",
                "example": "\"UserInvitation\""
              }
            }
          },
          "urn:hid:scim:api:ma:1.0:UserAction": {
            "$ref": "#/components/schemas/userActionWithOutInvitation"
          }
        },
        "type": "object"
      },
      "invitationCreateResponse": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "definitions": {},
        "id": "http://example.com/example.json",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/invitationCredentialResponseDetails"
          }
        ]
      },
      "invitationCredentialResponseDetails": {
        "type": "object",
        "properties": {
          "schemas": {
            "items": {
              "type": "array",
              "description": "Default schema",
              "enum": [
                "urn:hid:scim:api:ma:1.0:UserInvitation",
                "urn:hid:scim:api:ma:1.0:Credential"
              ]
            },
            "type": "array",
            "example": [
              "urn:hid:scim:api:ma:1.0:UserInvitation",
              "urn:hid:scim:api:ma:1.0:Credential"
            ]
          },
          "urn:hid:scim:api:ma:1.0:UserInvitation": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/urn:hid:scim:api:ma:1.0:UserInvitation"
                },
                {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/invitationMeta"
                    }
                  }
                }
              ]
            }
          },
          "urn:hid:scim:api:ma:1.0:Credential": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/urn:hid:scim:api:ma:1.0:Credential"
            }
          }
        }
      },
      "invitationGetResponse": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "definitions": {},
        "id": "http://example.com/example.json",
        "type": "object",
        "properties": {
          "schemas": {
            "items": {
              "type": "string",
              "description": "Default Schema Used here is urn:hid:scim:api:ma:1.0:UserInvitation",
              "default": "urn:hid:scim:api:ma:1.0:UserInvitation"
            },
            "type": "array"
          },
          "urn:hid:scim:api:ma:1.0:UserInvitation": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/urn:hid:scim:api:ma:1.0:UserInvitation"
                },
                {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/invitationMeta"
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "invitationListResponse": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "definitions": {},
        "id": "http://example.com/example.json",
        "properties": {
          "schemas": {
            "items": {
              "type": "string",
              "description": "Default Schema for List Apis is urn:ietf:params:scim:api:messages:2.0:ListResponse",
              "default": "urn:ietf:params:scim:api:messages:2.0:ListResponse"
            },
            "type": "array"
          },
          "totalResults": {
            "type": "number",
            "description": "Total number of User Invitations",
            "example": 1
          },
          "startIndex": {
            "type": "number",
            "description": "start Index",
            "example": 1
          },
          "itemsPerPage": {
            "type": "number",
            "description": "Number of Resources displayed per page(Max 25 items only)",
            "example": 1
          },
          "Resources": {
            "type": "array",
            "description": "Location of the resource to get more details of specific invitation associated to a user",
            "items": {
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/invitationMeta"
                }
              }
            }
          }
        },
        "type": "object"
      },
      "invitationSearchRequest": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "definitions": {},
        "id": "http://example.com/example.json",
        "properties": {
          "schemas": {
            "items": {
              "type": "string",
              "description": "Default schema of all search apis is urn:ietf:params:scim:api:messages:2.0:SearchRequest",
              "default": "urn:ietf:params:scim:api:messages:2.0:SearchRequest"
            },
            "type": "array"
          },
          "count": {
            "type": "number",
            "example": 10
          },
          "startIndex": {
            "type": "number",
            "example": 1
          },
          "sortBy": {
            "type": "string",
            "description": "By default it uses lastModifiedDate for sorting if none of the attributes are given",
            "enum": [
              "id",
              "invitationCode",
              "status"
            ],
            "example": "id"
          },
          "sortOrder": {
            "type": "descending",
            "example": "descending"
          },
          "attributes": {
            "type": "array",
            "description": "List of Attributes details that can be searched upon are id invitationCode or status",
            "items": {
              "type": "string",
              "enum": [
                "id",
                "invitationCode",
                "status"
              ],
              "example": [
                "id",
                "invitationCode",
                "status"
              ]
            }
          },
          "filter": {
            "type": "string",
            "enum": [
              "id",
              "invitationCode",
              "meta.lastModified",
              "status"
            ],
            "example": "status eq \"PENDING \""
          }
        },
        "type": "object"
      },
      "invitationSearchResponse": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "definitions": {},
        "id": "http://example.com/example.json",
        "type": "object",
        "properties": {
          "schemas": {
            "items": {
              "type": "string",
              "description": "Default schema of all search apis is urn:ietf:params:scim:api:messages:2.0:SearchRequest",
              "default": "urn:ietf:params:scim:api:messages:2.0:ListResponse"
            },
            "type": "array"
          },
          "totalResults": {
            "type": "number",
            "example": 1
          },
          "startIndex": {
            "type": "number",
            "example": 1
          },
          "itemsPerPage": {
            "type": "number",
            "example": 1
          },
          "Resources": {
            "$ref": "#/components/schemas/invitationSearchResources"
          }
        }
      },
      "invitationSearchResources": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "meta": {
              "$ref": "#/components/schemas/meta"
            },
            "id": {
              "type": "number",
              "description": "The internal id (Unique) to lookup the invitation ",
              "example": 12345
            },
            "invitationCode": {
              "type": "string",
              "description": "Actual Invitation code which is of type STRING with length 16 Code is represented in blocks of 4 separated by a \"-\". Each block contains 4 alphanumeric characters",
              "example": "EWEL-R42A-I64Y-FW2Z"
            },
            "status": {
              "type": "string",
              "description": "Represents the current status of an InvitationCode.",
              "example": "PENDING"
            }
          }
        }
      },
      "partNumberDetails": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 12345
          },
          "partNumber": {
            "type": "string",
            "example": "CRD633ZZ-00237"
          },
          "friendlyName": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "availableQty": {
            "type": "number"
          }
        }
      },
      "partNumberSearchRequest": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "definitions": {},
        "id": "http://example.com/example.json",
        "properties": {
          "schemas": {
            "items": {
              "type": "string",
              "description": "Default schema of all search apis is urn:ietf:params:scim:api:messages:2.0:SearchRequest",
              "default": "urn:ietf:params:scim:api:messages:2.0:SearchRequest"
            },
            "type": "array"
          },
          "count": {
            "type": "number",
            "example": 10
          },
          "startIndex": {
            "type": "number",
            "example": 1
          },
          "sortBy": {
            "type": "string",
            "description": "By default it uses lastModifiedDate for sorting if none of the attributes are given",
            "enum": [
              "id",
              "partNumber",
              "friendlyName",
              "availableQty",
              "description"
            ],
            "example": "partNumber"
          },
          "sortOrder": {
            "type": "descending",
            "example": "descending"
          },
          "attributes": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "id",
                "partNumber",
                "friendlyName",
                "availableQty",
                "description"
              ]
            },
            "example": [
              "partNumber",
              "availableQty",
              "description"
            ]
          },
          "filter": {
            "type": "string",
            "enum": [
              "partNumber",
              "friendlyName",
              "meta.lastModified"
            ],
            "example": "availableQty ge 50"
          }
        },
        "type": "object"
      },
      "partNumberListResponse": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "definitions": {},
        "id": "http://example.com/example.json",
        "properties": {
          "schemas": {
            "items": {
              "type": "string",
              "description": "Default Schema for List Apis is urn:ietf:params:scim:api:messages:2.0:ListResponse",
              "default": "urn:ietf:params:scim:api:messages:2.0:ListResponse"
            },
            "type": "array"
          },
          "totalResults": {
            "type": "number",
            "description": "Total number of part numbers",
            "example": 1
          },
          "startIndex": {
            "type": "number",
            "description": "start Index",
            "example": 1
          },
          "itemsPerPage": {
            "type": "number",
            "description": "Number of Resources displayed per page(Max 25 items only)",
            "example": 1
          },
          "Resources": {
            "type": "array",
            "description": "Location of the resource to get more details of part numbers",
            "items": {
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/partNumberMeta"
                }
              }
            }
          }
        },
        "type": "object"
      },
      "partNumberGetResponse": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "definitions": {},
        "id": "http://example.com/example.json",
        "type": "object",
        "properties": {
          "schemas": {
            "items": {
              "type": "string",
              "description": "Schema Used here is urn:hid:scim:api:ma:1.0:PartNumber",
              "default": "urn:hid:scim:api:ma:1.0:PartNumber"
            },
            "type": "array"
          },
          "urn:hid:scim:api:ma:1.0:PartNumber": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/urn:hid:scim:api:ma:1.0:PartNumber"
                },
                {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/invitationMeta"
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "partNumberSearchResponse": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "definitions": {},
        "id": "http://example.com/example.json",
        "type": "object",
        "properties": {
          "schemas": {
            "items": {
              "type": "string",
              "description": "Default schema of all search apis is urn:ietf:params:scim:api:messages:2.0:SearchRequest",
              "default": "urn:ietf:params:scim:api:messages:2.0:ListResponse"
            },
            "type": "array"
          },
          "totalResults": {
            "type": "number",
            "example": 1
          },
          "startIndex": {
            "type": "number",
            "example": 1
          },
          "itemsPerPage": {
            "type": "number",
            "example": 1
          },
          "Resources": {
            "$ref": "#/components/schemas/partNumberSearchResources"
          }
        }
      },
      "callbackResponse": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "definitions": {},
        "id": "http://example.com/example.json",
        "type": "object",
        "properties": {
          "schemas": {
            "items": {
              "type": "string",
              "required": true,
              "description": "Default Schema for Callback is \"urn:hid:scim:api:ma:1.0:CallbackRegistration\"."
            },
            "type": "array",
            "example": [
              "urn:hid:scim:api:ma:1.0:CallbackRegistration"
            ]
          },
          "meta": {
            "$ref": "#/components/schemas/callbackMeta"
          },
          "urn:hid:scim:api:ma:1.0:CallbackRegistration": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/urn:hid:scim:api:ma:1.0:CallbackRegistration"
            }
          }
        }
      },
      "sdkVersionGetResponse": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "definitions": {},
        "id": "http://example.com/example.json",
        "type": "object",
        "properties": {
          "schemas": {
            "items": {
              "type": "string",
              "required": true,
              "description": "Default Schema for SDK version is \"urn:hid:scim:api:ma:1.0:SDKVersion\"."
            },
            "type": "array",
            "example": [
              "urn:hid:scim:api:ma:1.0:SDKVersion"
            ]
          },
          "meta": {
            "$ref": "#/components/schemas/sdkVersionMeta"
          },
          "urn:hid:scim:api:ma:1.0:SDKVersion": {
            "$ref": "#/components/schemas/urn:hid:scim:api:ma:1.0:SDKVersion"
          }
        }
      },
      "urn:ietf:params:scim:schemas:core:2.0:User": {
        "type": "object",
        "properties": {
          "schemas": {
            "items": {
              "type": "string",
              "description": "Default Schema Used here is urn:ietf:params:scim:schemas:core:2.0:User",
              "default": "urn:ietf:params:scim:schemas:core:2.0:User"
            },
            "type": "array"
          },
          "id": {
            "type": "number",
            "description": "Unique Id of the User",
            "example": 12345
          },
          "externalId": {
            "type": "string",
            "description": "External Id of a User",
            "example": "12"
          },
          "name": {
            "type": "object",
            "properties": {
              "familyName": {
                "type": "string",
                "example": "John"
              },
              "givenName": {
                "type": "string",
                "example": "Snow"
              }
            }
          },
          "emails": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string",
                  "example": "john@gmail.com"
                }
              }
            }
          },
          "status": {
            "type": "string",
            "description" : "Status of the User.It can be one of \n\n | **Status**  | **Description** |\n|---------------|--------------|\n| Active | Active Mobile End User  |\n|  INACTIVE_INITIATED | Deleting User \n\n",
            "example": "ACTIVE"
          }
        }
      },
      "userInvitationCredentialResponse": {
        "type": "object",
        "properties": {
          "schemas": {
            "items": {
              "type": "string",
              "description": "Default Schema Used here is urn:ietf:params:scim:schemas:core:2.0:User",
              "enum": [
                "urn:ietf:params:scim:schemas:core:2.0:User",
                "urn:hid:scim:api:ma:1.0:UserInvitation",
                "urn:hid:scim:api:ma:1.0:Credential"
              ]
            },
            "type": "array",
            "example": [
              "urn:ietf:params:scim:schemas:core:2.0:User",
              "urn:hid:scim:api:ma:1.0:UserInvitation",
              "urn:hid:scim:api:ma:1.0:Credential"
            ]
          },
          "id": {
            "type": "number",
            "description": "Unique Id of the User",
            "example": 12345
          },
          "externalId": {
            "type": "string",
            "description": "External Id of a User",
            "example": "12"
          },
          "name": {
            "type": "object",
            "properties": {
              "familyName": {
                "type": "string",
                "example": "John"
              },
              "givenName": {
                "type": "string",
                "example": "Snow"
              }
            }
          },
          "emails": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string",
                  "example": "john@gmail.com"
                }
              }
            }
          },
          "status": {
            "type": "string",
            "example": "ACTIVE"
          },
          "urn:hid:scim:api:ma:1.0:UserInvitation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/urn:hid:scim:api:ma:1.0:UserInvitation"
            }
          },
          "urn:hid:scim:api:ma:1.0:Credential": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/urn:hid:scim:api:ma:1.0:Credential"
            }
          },
          "meta": {
            "$ref": "#/components/schemas/userMeta"
          }
        }
      },
      "urn:hid:scim:api:ma:1.0:CredentialContainer": {
        "type": "object",
        "required": [
          "id",
          "status",
          "osVersion",
          "secureElementType",
          "manufacturer",
          "model",
          "applicationVersion",
          "simOperator",
          "bluetoothCapability",
          "nfcCapability"
        ],
        "properties": {
          "id": {
            "type": "number",
            "description": "Credential Container unique ID(Endpoint Id)",
            "example": 1234567
          },
          "status": {
            "type": "string",
            "description": "Credential Container Status. It can be one of \n\n | **Status**  | **Description** |\n|---------------|--------------|\n| ACTIVE | Ready for Mobile ID |\n| REGISTERED | Registered |\n| NOT_ELIGIBLE | Device Not Supported |\n| TERMINATED | Terminated |\n| INACTIVE | Inactive |\n| DELETE_INITIATED | Deleting... |\n| DELETE_FAILED | Delete Device Failed \n\n",
            "example": "ACTIVE"
          },
          "osVersion": {
            "type": "string",
            "description": "OS Version of User's Endpoint ",
            "example": "Android 5.1"
          },
          "secureElementType": {
            "type": "string",
            "description": "secureElementType",
            "example": "EMULATED"
          },
          "manufacturer": {
            "type": "string",
            "description": "Endopint Manufacturer",
            "example": "SAMSUNG"
          },
          "model": {
            "type": "string",
            "description": "Endopint Model",
            "example": "SAMSUNG S5"
          },
          "applicationVersion": {
            "type": "string",
            "description": "applicationVersion",
            "example": "2.5-hid"
          },
          "simOperator": {
            "type": "string",
            "description": "Service Provider",
            "example": "AT&T"
          },
          "bluetoothCapability": {
            "type": "string",
            "description": "Endopint Feature Capability for bluetooth",
            "example": "Y"
          },
          "nfcCapability": {
            "type": "string",
            "description": "Endopint Feature Capability for NFC",
            "example": "Y"
          }
        }
      },
      "urn:hid:scim:api:ma:1.0:Credential": {
        "type": "object",
        "required": [
          "id",
          "partNumber",
          "partnumberFriendlyName",
          "cardNumber",
          "status",
          "credentialType"
        ],
        "properties": {
          "id": {
            "type": "number",
            "description": "Credential ID",
            "example": 12345678
          },
          "partNumber": {
            "type": "string",
            "description": "HID Defined Part number",
            "example": "IOD-MB-95029"
          },
          "partnumberFriendlyName": {
            "type": "string",
            "description": "Friendly Name for the Part Number ",
            "example": "London office - HID"
          },
          "cardNumber": {
            "type": "string",
            "description": "card number",
            "example": "1001870"
          },
          "status": {
            "type": "string",
            "description": "Credential Issuance Status. It can be one of \n\n | **Status**  | **Description** |\n|---------------|--------------|\n| UNBOUND | Ready for Mobile ID (Unbound) |\n| ISSUE_INITIATED | Delivering Mobile ID... |\n| ISSUING | Delivering Mobile ID... |\n| ISSUING_FAILED | Mobile ID Delivery Failed |\n| ISSUED | Mobile ID Delivered |\n| REVOKE_INITIATED | Revoking... |\n| REVOKING | Revoking Mobile ID... |\n| REVOKED | Mobile ID Revoked |\n| REVOKE_FAILED | Revoke Failed \n\n",
            "example": "ISSUED"
          },
          "credentialType": {
            "type": "string",
            "description": "Type or Class of credential",
            "example": "ICLASSSEOS"
          }
        }
      },
      "urn:hid:scim:api:ma:1.0:UserInvitation": {
        "type": "object",
        "required": [
          "invitationCode",
          "status",
          "createdDate",
          "expirationDate",
          "id"
        ],
        "properties": {
          "invitationCode": {
            "type": "string",
            "description": "AAMK Invitation Code to be redeemed in endpoint ",
            "example": "LJS2-NLL4-73IQ-7UZT"
          },
          "status": {
            "type": "string",
            "description": "Invitation Code Status.It can be one of \n\n | **Status**  | **Description** |\n|---------------|--------------|\n| PENDING | Invitation Active |\n| FAILED | Invitation Failed |\n| ACKNOWLEDGED | Invitation Code Redeemed |\n| EXPIRED | Invitation Expired |\n| CANCELLED | Invitation Cancelled |\n| DEVICE_NOT_SUPPORTED | Device Not Supported |\n| CANCEL_FAILED | Cancel Failed \n\n",
            "example": "ACKNOWLEDGED"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time",
            "description": "Invitation Created Date",
            "example": "2016-03-20T12:15:30Z"
          },
          "expirationDate": {
            "type": "string",
            "format": "date-time",
            "description": "Invitation Expiry Date",
            "example": "2016-03-22T12:15:30Z"
          },
          "id": {
            "type": "number",
            "description": "Invitation unique ID",
            "example": 12345
          }
        }
      },
      "urn:hid:scim:api:ma:1.0:UserAction": {
        "type": "object",
        "properties": {
          "createInvitationCode": {
            "type": "string",
            "enum": [
              "Y",
              "N"
            ],
            "description": "User needs an Invitation code generated along with the enrollment process.Attribute Value should be either Y/y or N/n."
          },
          "sendInvitationEmail": {
            "type": "string",
            "enum": [
              "Y",
              "N"
            ],
            "description": "Send an email once the Invitation code is generated successfully.Attribute Value should be either Y/y or N/n."
          },
          "assignCredential": {
            "type": "string",
            "enum": [
              "Y",
              "N"
            ],
            "description": "Assign next available credential once the user consumes Invitation Code. This action is applicable if and only if the createInvitationCode is requested in the same request.Attribute Value should be either Y/y or N/n."
          },
          "partNumber": {
            "type": "string",
            "description": "Part number that needs to be assigned.If its empty then default part number of the organization will be used",
            "example": ""
          },
          "credential": {
            "type": "string",
            "description": "Unique Credential that needs to be assigned to a Credential Container.",
            "example": ""
          }
        }
      },
      "urn:hid:scim:api:ma:1.0:PartNumber": {
        "type": "object",
        "required": [
          "id",
          "partNumber",
          "friendlyName",
          "description",
          "availableQty",
          "meta"
        ],
        "properties": {
          "id": {
            "type": "number",
            "description": "Part number unique ID",
            "example": 12345
          },
          "partNumber": {
            "type": "string",
            "description": "HID defined Part number",
            "example": "CRD633ZZ-00237"
          },
          "friendlyName": {
            "type": "string",
            "description": "Friendly Name of the part number",
            "example": "SDK"
          },
          "description": {
            "type": "string",
            "description": "Description of Part number",
            "example": "Desc"
          },
          "availableQty": {
            "type": "number",
            "description": "Total available Credentials that are not bounded yet",
            "example": 200
          }
        }
      },
      "urn:hid:scim:api:ma:1.0:CallbackRegistration": {
        "type": "object",
        "required": [
          "callbackUrl"
        ],
        "properties": {
          "callbackUrl": {
            "type": "string",
            "description": "URL provided by API Integrator to subscribe for status updates.",
            "example": "https://username:password@example.com/callbackServlet"
          }
        }
      },
      "urn:hid:scim:api:ma:1.0:SDKVersion": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "version": {
              "type": "string",
              "description": "Version of SDK",
              "example": "1.0"
            }
          }
        }
      },
      "userMeta": {
        "type": "object",
        "description": "Meta information for PACSUser",
        "properties": {
          "location": {
            "type": "string",
            "description": "Location of PACSUser",
            "example": "{Base_URI}/customer/548/users/90001"
          },
          "lastModified": {
            "type": "string",
            "format": "date-time",
            "description": "Last Modified Date Time of PACSUser in UTC",
            "example": "2017-08-02T10:30:45Z"
          },
          "resourceType": {
            "type": "string",
            "description": "Type of resource. Default value \"PACSUser\"",
            "example": "PACSUser"
          }
        }
      },
      "invitationMeta": {
        "type": "object",
        "description": "Meta information for invitation",
        "properties": {
          "location": {
            "type": "string",
            "description": "Location of invitation",
            "example": "{Base_URI}/customer/548/invitation/4521689"
          },
          "lastModified": {
            "type": "string",
            "format": "date-time",
            "description": "Last Modified Date Time of invitation in UTC",
            "example": "2017-08-02T10:30:45Z"
          },
          "resourceType": {
            "type": "string",
            "description": "Type of resource. Default value \"UserInvitation\"",
            "example": "UserInvitation"
          }
        }
      },
      "partNumberMeta": {
        "type": "object",
        "description": "Meta information for Part Number",
        "properties": {
          "location": {
            "type": "string",
            "description": "Location of Part Number",
            "example": "{Base_URI}/customer/548/part-number/134061"
          },
          "lastModified": {
            "type": "string",
            "format": "date-time",
            "description": "Last Modified Date Time of Part Number in UTC",
            "example": "2017-08-02T10:30:45Z"
          },
          "resourceType": {
            "type": "string",
            "description": "Type of resource. Default value \"PartNumber\"",
            "example": "PartNumber"
          }
        }
      },
      "credentialMeta": {
        "type": "object",
        "description": "Meta information for Credential",
        "properties": {
          "location": {
            "type": "string",
            "description": "Location of Credential",
            "example": "{Base_URI}/customer/548/credential/5695951"
          },
          "lastModified": {
            "type": "string",
            "format": "date-time",
            "description": "Last Modified Date Time of Credential in UTC",
            "example": "2017-08-02T10:30:45Z"
          },
          "resourceType": {
            "type": "string",
            "description": "Type of resource. Default value \"UserCredential\"",
            "example": "UserCredential"
          }
        }
      },
      "credentialContainerMeta": {
        "type": "object",
        "description": "Meta information for Credential Container",
        "properties": {
          "location": {
            "type": "string",
            "description": "Location of Credential Container",
            "example": "{Base_URI}/customer/548/credential-container/4523253"
          },
          "lastModified": {
            "type": "string",
            "description": "Last Modified Date Time of Credential Container in UTC",
            "format": "date-time",
            "example": "2017-08-02T10:30:45Z"
          },
          "resourceType": {
            "type": "string",
            "description": "Type of resource. Default value \"UserCredentialContainer\"",
            "example": "UserCredentialContainer"
          }
        }
      },
      "callbackMeta": {
        "type": "object",
        "description": "Meta information for Callback",
        "properties": {
          "location": {
            "type": "string",
            "example": "{Base_URI}/customer/548/callback-registration/61",
            "description": "Location of Callback"
          },
          "lastModified": {
            "type": "string",
            "format": "date-time",
            "description": "Last modifed date of Callback in UTC",
            "example": "2017-08-02T10:30:45Z"
          },
          "resourceType": {
            "type": "string",
            "description": "Type of resource. Default value \"CallbackRegistration\"",
            "example": "CallbackRegistration"
          }
        }
      },
      "sdkVersionMeta": {
        "type": "object",
        "description": "Meta information for SDK version",
        "properties": {
          "location": {
            "description": "Location of SDK",
            "type": "string",
            "example": "{Base_URI}/customer/30/sdk-version"
          },
          "lastModified": {
            "type": "string",
            "description": "Last modifed date of SDK version in UTC",
            "format": "date-time",
            "example": "2017-08-02T10:30:45Z"
          },
          "resourceType": {
            "type": "string",
            "description": "Type of resource. Default value \"SDKVersion\"",
            "example": "SDKVersion"
          }
        }
      },
      "scimSchemaMeta": {
        "type": "object",
        "description": "Meta information",
        "properties": {
          "location": {
            "description": "Location",
            "type": "string"
          },
          "resourceType": {
            "type": "string",
            "description": "Type of resource."
          }
        }
      },
      "serviceProviderConfigMeta": {
        "type": "object",
        "description": "Meta information",
        "properties": {
          "location": {
            "description": "Location",
            "type": "string"
          },
          "resourceType": {
            "type": "string",
            "description": "Type of resource."
          },
          "created": {
            "type": "date-time",
            "description": "Created date & time in UTC"
          },
          "lastModified": {
            "type": "date-time",
            "description": "Last updated date & time in UTC"
          }
        }
      },

      "scimSchema": {
        "type": "object",
        "description": "User schema meta credentials",
        "properties": {
          "id": {
            "description": "Id of the meta",
            "type": "string"
          },
          "name": {
            "type": "string",
            "description": "Name of the meta"
          },
          "description": {
            "type": "string",
            "description": "Description of the meta"
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/scimSchemaAttribute"
            }
          },
          "meta": {
            "$ref": "#/components/schemas/scimSchemaMeta"
          }
        }
      },
      "scimSchemaWithSubAttribute": {
        "type": "object",
        "description": "User schema meta credentials",
        "properties": {
          "id": {
            "description": "Id of the meta",
            "type": "string"
          },
          "name": {
            "type": "string",
            "description": "Name of the meta"
          },
          "description": {
            "type": "string",
            "description": "Description of the meta"
          },
          "attributes": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/scimSchemaAttribute"
                },
                {
                  "type": "object",
                  "description": "Sub Attribute information",
                  "properties": {
                    "subAttribute": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/scimSchemaAttribute"
                      }
                    }
                  }
                }
              ]
            }
          },
          "meta": {
            "$ref": "#/components/schemas/scimSchemaMeta"
          }
        }
      },
      "scimSchemaWithCanonicalValues": {
        "type": "object",
        "description": "User schema meta credentials",
        "properties": {
          "id": {
            "description": "Id of the meta",
            "type": "string"
          },
          "name": {
            "type": "string",
            "description": "Name of the meta"
          },
          "description": {
            "type": "string",
            "description": "Description of the meta"
          },
          "attributes": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/scimSchemaAttribute"
                },
                {
                  "type": "object",
                  "description": "Sub Attribute information",
                  "properties": {
                    "canonicalValues": {
                      "type": "array",
                      "description": "Canonical value of meta"
                    }
                  }
                }
              ]
            }
          },
          "meta": {
            "$ref": "#/components/schemas/scimSchemaMeta"
          }
        }
      },
      "scimSchemaAttribute": {
        "type": "object",
        "description": "Schema information",
        "properties": {
          "name": {
            "description": "Name of the attribute",
            "type": "string"
          },
          "type": {
            "description": "Type of the attribute",
            "type": "string"
          },
          "multiValued": {
            "description": "Is attribute multi valued",
            "type": "boolean"
          },
          "description": {
            "description": "Description of the attribute",
            "type": "string"
          },
          "required": {
            "description": "Is attribute required",
            "type": "boolean"
          },
          "caseExact": {
            "description": "",
            "type": "boolean"
          },
          "mutability": {
            "description": "",
            "type": "string"
          },
          "returned": {
            "description": "",
            "type": "string"
          },
          "uniqueness": {
            "description": "",
            "type": "string"
          }
        }
      },
      "resourceTypeSchema": {
        "type": "object",
        "description": "Schema information for Resource Type",
        "properties": {
          "totalResults": {
            "description": "Total no of results",
            "type": "integer"
          },
          "itemsPerPage": {
            "description": "No of items per page",
            "type": "integer"
          },
          "startIndex": {
            "description": "Start index value",
            "type": "integer"
          },
          "schemas": {
            "description": "List of available schemas",
            "type": "array"
          },
          "Resources": {
            "description": "Resource Information",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "schemas": {
                  "description": "List of available schemas",
                  "type": "array"
                },
                "id": {
                  "description": "Id",
                  "type": "string"
                },
                "name": {
                  "description": "Name of the attribute",
                  "type": "array"
                },
                "endpoint": {
                  "description": "End point value",
                  "type": "string"
                },
                "description": {
                  "description": "Resource attribute description",
                  "type": "string"
                },
                "schema": {
                  "description": "Schema information for an attribute",
                  "type": "string"
                },
                "schemaExtensions": {
                  "description": "Schema extension information for an attribute",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "schema": {
                        "description": "Schema information for an attribute",
                        "type": "string"
                      },
                      "required": {
                        "description": "Is schema required",
                        "type": "boolean"
                      }
                    }
                  }
                },
                "meta": {
                  "$ref": "#/components/schemas/scimSchemaMeta"
                }
              }
            }
          }
        }
      },
      "serviceProviderConfigSchema": {
        "type": "object",
        "description": "Schema information for Service  Provider Configuration",
        "properties": {
          "schemas": {
            "description": "List of available schemas",
            "type": "array"
          },
          "documentationUri": {
            "description": "Service provider configuration document URI",
            "type": "string"
          },
          "patch": {
            "type": "object",
            "properties": {
              "supported": {
                "description": "Is patch supported",
                "type": "boolean"
              }
            }
          },
          "bulk": {
            "type": "object",
            "properties": {
              "supported": {
                "description": "Is bulk operation supported",
                "type": "boolean"
              }
            }
          },
          "filter": {
            "type": "object",
            "properties": {
              "supported": {
                "description": "Is filter operation supported",
                "type": "boolean"
              },
              "maxResults": {
                "description": "Max no of records available for filter",
                "type": "integer"
              }
            }
          },
          "changePassword": {
            "type": "object",
            "properties": {
              "supported": {
                "description": "Is change password supported",
                "type": "boolean"
              }
            }
          },
          "sort": {
            "type": "object",
            "properties": {
              "supported": {
                "description": "Is sort operation supported",
                "type": "boolean"
              }
            }
          },
          "etag": {
            "type": "object",
            "properties": {
              "supported": {
                "description": "Is e-tag supported",
                "type": "boolean"
              }
            }
          },
          "authenticationSchemes": {
            "type": "array",
            "description": "Authentication schemes information",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Authentication scheme name",
                  "type": "string"
                },
                "description": {
                  "description": "Authentication scheme description",
                  "type": "string"
                },
                "type": {
                  "description": "Authentication scheme type",
                  "type": "string"
                },
                "primary": {
                  "description": "Is primary Authentication scheme",
                  "type": "boolean"
                }
              }
            }
          },
          "meta": {
            "$ref": "#/components/schemas/serviceProviderConfigMeta"
          }
        }
      },
      "errorModel": {
        "properties": {
          "statusCode": {
            "description": "HTTP status code for error",
            "type": "integer"
          },
          "error": {
            "description": "Error information",
            "type": "string"
          },
          "message": {
            "description": "Error detailed description",
            "type": "string"
          }
        },
        "type": "object"
      },
      "badRequestError": {
        "description": "BAD REQUEST",
        "schema": {
          "allOf": [{
            "$ref": "#/components/schemas/errorModel"
          },{
            "example":{
              "statusCode": 400,
              "error": "BAD REQUEST",
              "message": "We are unable to continue with your request, due to technical difficulty. Please try again or contact your support."
            }
          }]

        }
      },

      "userConflictError": {
        "description": "CONFLICT",
        "schema": {
          "allOf": [{
            "$ref": "#/components/schemas/errorModel"
          },{
            "example":{
              "statusCode": 409,
              "error": "CONFLICT",
              "message": "This user with given Email ID is already enrolled."
            }
          }]

        }
      },
      "userPreConditionFailedError": {
        "description": "PRECONDITION FAILED",
        "schema": {
          "allOf": [{
            "$ref": "#/components/schemas/errorModel"
          },{
            "example":{
              "statusCode": 412,
              "error": "PRECONDITION FAILED",
              "message": "The requested Company User is in Deleting status."
            }
          }]

        }
      },
      "invitationPreConditionFailedError": {
        "description": "PRECONDITION FAILED",
        "schema": {
          "allOf": [{
            "$ref": "#/components/schemas/errorModel"
          },{
            "example":{
              "statusCode": 412,
              "error": "PRECONDITION FAILED",
              "message": "This Invitation is in an \"inactive\" state to perform the requested operation."
            }
          }]

        }
      },
      "credentialPreConditionFailedError": {
        "description": "PRECONDITION FAILED",
        "schema": {
          "allOf": [{
            "$ref": "#/components/schemas/errorModel"
          },{
            "example":{
              "statusCode": 412,
              "error": "PRECONDITION FAILED",
              "message": "There is no Credential Container associated with the requested Credential."
            }
          }]

        }
      },
      "callbackPreConditionFailedError": {
        "description": "PRECONDITION FAILED",
        "schema": {
          "allOf": [{
            "$ref": "#/components/schemas/errorModel"
          },{
            "example":{
              "statusCode": 412,
              "error": "PRECONDITION FAILED",
              "message": "Callback URL already exists for the company."
            }
          }]

        }
      }
    },
    "examples": {
      "unAuthorizedRequest": {
        "description": "UNAUTHORIZED",
        "examples": {
          "application/json": {
            "statusCode": 401,
            "error": "Unauthorized",
            "message": "Bad token",
            "attributes": {
              "error": "Bad token"
            }
          }
        }
      },
      "internalServerErrorRequest": {
        "description": "INTERNAL SERVER ERROR",
        "schema": {
          "type": "string",
          "example" : "INTERNAL SERVER ERROR"
        }
      },
      "successResponse": {
        "description": "OK",
        "headers": {
          "Content-Type": {
            "type": "string",
            "default": "application/vnd.assaabloy.ma.credential-management-1.0+json"
          }
        },
        "schema": {
          "type": "string"
        }
      },
      "deleteSuccessResponse": {
        "description": "NO CONTENT",
        "headers": {
          "Content-Type": {
            "type": "string",
            "default": "application/vnd.assaabloy.ma.credential-management-1.0+json"
          }
        },
        "schema": {
          "type": "string",
          "example" : "NO CONTENT"
        }
      },
      "urlNotFoundRequest": {
        "description": "NOT FOUND",
        "examples": {
          "application/json": {
            "statusCode": 404,
            "error": "Not Found",
            "message": "The requested URL/Method was not found on this server."
          }
        }
      }
    }
  }
}
